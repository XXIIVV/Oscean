<h2>UFX is a proportional font format.</h2>

<p>The <code>UFX</code> file begins with 256 bytes corresponding to the width(in pixels) of each of the 256 glyphs in the spritesheet, followed by the pixel data in the <a href='icn_format.html'>.icn format</a> for each character.</p>

<table border='1'>
	<tr><th>Extension</th><th>Size(px)</th><th>Filesize</th></tr>
	<tr><td><code>.uf1</code></td><td>8x8(1 tile)</td><td>0x0900</td></tr>
	<tr><td><code>.uf2</code></td><td>16x16(4 tiles)</td><td>0x2100</td></tr>
	<tr><td><code>.uf3</code></td><td>24x24(9 tiles)</td><td>0x4900</td></tr>
</table>

<p>The pixel data for each glyph is stored in a series of 8x8 tiles, the drawing order goes vertically as to be able to skip extra draw calls for narrow characters if needed:</p>

<table border='1'>
	<tr><td>0</td><td class='highlight'>2</td></tr>
	<tr><td>1</td><td class='highlight'>3</td></tr>
</table>

<p>A naive uf2 character drawing routine in <a href='uxntal.html'>Uxntal</a> is about 50 bytes, with the screen's <a href='varvara.html'>auto byte</a> set to <code>#15</code>:</p>

<pre>
@draw-uf2 ( text* -- )
	[ LIT2 15 -Screen/auto ] DEO
	&>while ( -- )
		LDAk #00 SWP DUP2
		( addr ) #20 SUB #50 SFT2 ;font/glyphs ADD2 .Screen/addr DEO2
		( move ) ;font ADD2 LDA #00 SWP .Screen/x DEI2 ADD2
		( draw ) [ LIT2 01 -Screen/sprite ] DEOk DEO
		.Screen/x DEO2
		INC2 LDAk ?&>while
	POP2 JMP2r
</pre>

<p>The empty pixel data of the first 32 invisible characters are typically removed. You will find this filetype in the <a href='uxn.html'>Uxn</a> ecosystem, namely in <a href='left.html'>Left</a>. Uf2 fonts can be viewed and edited with <a href='turye.html'>Turye</a>. </p>

<style>
	.highlight { background:#eee }
	@media (prefers-color-scheme:dark) {
		.highlight { background:#222 }
	}
</style>
