<h2>Now lie in it.[DRAFT]</h2>

<p>Autumn is just around the corner and when the leaves begin to fall, it will have been four years since the <a href='devlog.html'>first sketches</a> of a personal computing system which became <a href='uxn.html'>Uxn</a>, and so I think it is interesting to see what has happened since.</p>

<q>What is the problem that targeting a small virtual machine architecture was supposed address?</q>

<p>Uxn was designed explicitly to be a bytecode target that would be just about enough to preserve the handful of projects we had made, and were going to make, in a way that would be portable and robust against bitrot. In that regard, more time is needed to know if this was a good idea or not. </p>

<p>But I can say that it has taken 3 years for the Uxn core to be frozen, and the tail end of that period saw changes so subtle as to not impact the projects made in the first two; as it was primarily about finding, documenting and testing against the remaining undefined behaviors, of which Uxn has no longer any. <a href='varvara.html'>Varvara</a> is not frozen, and will not be frozen for a while still, but it has not seen a breaking change in nearly two years and I cannot see any in its immediate future.</p>

<h3>Side Quests</h3>

<p>Against what is commonly understood of these kinds of virtual machines, I went ahead with the idea knowingly that it might just be too power intensive and self-defeating to target a virtual machine in which transformations are so granular that it would be hard for the host machine to optimize for. Uxn was indirectly meant to help us reconcile the power-hungry tools we used with the energy we were able to get from solar aboard our small boat.</p>

<p>It was part of a larger gesture toward reducing the strain on that one resource that involved more than just putting a virtual machine at the center of it all; what was possible to do on paper, outside the browser, or natively, was thereafter done that way, but still a few projects we had in mind were inextricably linked to portable graphical applications and so we decided to address that in this way.</p>

<p>Uxn might have helped a bit but only so much; for instance the text-editor with which I am typing this article, and with which I do just about all computery things with, uses dramatically less energy than what I used previously. But I wouldn't attribute our extra power to the application running as a uxn program or not. I think where Uxn, as a target, shines most brightly is in its helping to reduce the cost of iterating during software development itself. For example if we compare the minuscule drain of reassembling a rom in comparison to rebuilding a native application or reloading a webapp.</p>

<h3>Other paths</h3>

<p>Four years ago, had our situation been different, I don't know that I would have decided to stick with iOS development, nor web development. I don't think that our changing reality was what catalyzed my looking for alternatives, but it might have precipitated it. At that time, browsers hadn't started forcing AI toolchains in, but it was already many years into Apple's battle against the right to repair their devices and Adobe's clawing at my wallet; it was already becoming apparent that someone's deliberate choice to target the modern web browser for their little graphical toys was a vote against decentralized general purpose computing, and one for the homogenization of computing and monetization of my attention by handful companies which were already antagonistic at the time. Everything is political.</p>

<p>But I did discover interesting things along the way.. If I had to do it different, I would-</p>


