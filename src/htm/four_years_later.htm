<h2>Now lie in it.[DRAFT]</h2>

<p>Autumn is just around the corner and when the leaves begin to fall, it will have been four years since the <a href='devlog.html'>early sketches</a> of a personal computing system which became <a href='uxn.html'>Uxn</a>. I think it is interesting to look back and see what has happened since.</p>

<q>What problem was it supposed address?</q>

<p>Uxn was designed explicitly to be a minimal bytecode target that would be capable of preserving a handful of <a href='https://100r.co/site/oquonie' target='_blank'>projects we had made</a>, and be flexible enough to accommodate for the ones we had yet to make, in a way that is be portable and robust <a href='https://100r.co/site/story.html' target='_blank'>against bitrot</a>.</p>

<p>In regard to preservation, more time is needed to know if this succeeded, but I can say that it has taken 3 years for the Uxn core to be frozen, and the tail end of that period saw changes <a href='https://lists.sr.ht/~rabbits/uxn' target='_blank'>so subtle</a> as to not impact the projects made in the first two. The remaining work during that time was primarily about finding, documenting and testing against the remaining undefined behaviors.</p>

<p>During these four years, I have seen countless developers <a href='https://github.com/hundredrabbits/awesome-uxn' target='_blank'>successfully implement</a> the Varvara runtime from scratch without my help; this is giving me hope that for as long as the documentation survives, new runtimes can be created as the hardware platforms and operating systems change.</p>

<img src='../media/refs/turnipclub.png' style="width: 80%;margin: 0 auto 30px;display: block;"/>

<q>Uxn is probably power hungry</q>

<p>Uxn was indirectly meant to help us reconcile the power-hungry tools we used with the energy we were able to get from solar aboard our small boat. It is a bit counter-intuitive and against what is commonly understood about virtual machines to go ahead knowing that it might just be too power intensive and self-defeating to target a virtual machine in which transformations are so granular that it would be hard for the host machine to optimize for.</p>

<p>It is only one part of a larger gesture toward reducing the strain on that one resource that involved more than just putting a virtual machine at the center of it all; what was possible to do on paper, outside the browser, or natively, was thereafter done that way, but still a few projects we had in mind were inextricably linked to portable graphical applications and so we decided to address that in this way.</p>

<p>Uxn might have helped a bit but only so much; for instance the text-editor with which I am typing this article, and with which I do just about all <i>computery</i> things with, uses dramatically <a href='https://news.ycombinator.com/item?id=40805267' target='_blank'>less energy than what I used previously</a>. But I wouldn't attribute our extra power to the application running as a Uxn program or not. I think where Uxn, as a target, shines most brightly is in its helping to reduce the cost of iterating during software development itself. For example if we compare the minuscule drain of assembling a rom in comparison to rebuilding a native graphical application or reloading a webapp.</p>

<q>Uxn doesn't solve a real problem</q>

<p>That's correct. I am not the least convinced that computers solve any real problems in the first place, the fact that asking a room full of software creators "<a href='https://forum.merveilles.town/thread/35/what-are-computers-for%2c-anyway%3f-39/' target='_blank'>what are computers for anyways?</a>" will get you little beyond vague suggestions of bureaucratic utility leaves me only asking, is bureaucracy solving any real problems, and so on, <i>ad absurdum</i>.</p>

<p>But if we are to put any value in preserving digital art, music, video games and other distractions from that very real problems that basic needs demand, it might be worthwhile to address the problem head-on and encourage piracy at a massive scale to duplicate digital content locally as to give this digital data a fair chance to survive moving forward. Emulation is but one way of exploring this problem, <a href='permacomputing.html'>out of many</a>. Cloud platforms have all to loose by making us forget that we can utilize a specific length of bytes without their saying so. </p>

<q>The problems it is trying to solve are self-inflicted</q>

<p>There is a time <a href='https://www.gypsy-traveller.org/policy-publications/' target='_blank'>immemorial tradition</a> of hating against the various flavors of nomadic vagabonds living in tents, cars, canal boats, and we are not exempt from that. The economics of living on the water without a permanent address seem to elude most people on discussion forums who believe that this way of life is something only the wealthy do, and that everyone is in it by choice. To the people saying that <a href='https://news.ycombinator.com/item?id=41136598' target='_blank'>my problems are not real</a> and to <i>get a job</i>, I will simply say: <i>"No, and Fuck you!"</i></p>

<p>In any case, four years ago, had our situation been different, I don't know that I would have decided to stuck with either iOS or web development. I don't think that our changing reality was what catalyzed my looking for alternatives, but it might have precipitated it. At that time, browsers hadn't started force-feeding AI toolbars, but it was already many years into Apple devising new ways to <a href='https://doctorow.medium.com/apple-fucked-us-on-right-to-repair-again-df4b35030480' target='_blank'>sabotage the repair of devices</a>; it was becoming apparent that my choice to target the modern web browser for little graphical toys was a vote against decentralized general purpose computing, and one for the homogenization of computing by companies that were increasingly antagonistic to our situation.</p>

<img src='../media/refs/turnipile.png' style="width:60%;margin: 0 auto 30px;display: block;"/>

<q>Uxn is too complicated, or not complicated enough</q>

<p>I noticed that Uxn attracts both esoteric and practical individuals. The esoteric crowd looking at the Uxn specification think "Why not Brainfuck?". It's a fair comment, as bf enjoyer myself, I can see how this strays from the tarpit, but again look around and notice how very few drawing tools, video games and music players are written in bf.</p>

<p>The practical crowd looking at the Uxn limitations tend to find all sorts of ways in which it is deficient, the memory is too small, the opcodes too few, the speed to slow. I have seen some people come around, especially once they look back at the typical projects that they do, and how they can be done comfortably with less space, simpler languages and more efficiently, but there is no denying that Uxn has a specific scope in mind and does not easily accommodate for certain flavors of convenience.</p>



