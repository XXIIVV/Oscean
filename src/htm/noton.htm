<h2>Noton is a livedrawing playground.</h2>

<p>Noton works by drawing cables between timers, logic gates and instruments inspired from sejo's <a href='paper_computing.html'>Color Computers</a> to explore <a href='binary.html'>binary logic</a>.</p>

<p>Right-click to add nodes, and left-click to add wires. Nodes will emit a positive signal if all the connected wires have the same polarity. The screen has timers to the left, and notes to the right. The default timers are 6 trackers, 4 sequencers and 2 pools.</p>

<iframe width='624' height='380' src='https://www.youtube.com/embed/dhWNmAEcdcU?rel=0' style='max-width:700px' frameborder='0' allow='autoplay; encrypted-media' allowfullscreen></iframe>

<h3>Source</h3>

<div class='codeview'>
	<iframe src="../etc/noton.c.txt"></iframe>
	<pre>cc -Os -DNDEBUG -g0 -s -Wall -Wno-unknown-pragmas -L/usr/local/lib -lSDL2 -lportmidi noton.c -o noton</pre>
</div>

<h3>Sequencing</h3>

<p>For example, if we wanted to play C3 every 2nd and 6th note, every 8 bars. We can combine two tracker nodes.</p>

<table border='1'>
	<tr><th>time</th><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td></tr>
	<tr><th>Track 2/4 + <span style='background:#f00'>false pool</span></th><td>1</td><td style='background:#eee'>0</td><td>1</td><td style='background:#eee'>0</td><td>1</td><td style='background:#eee'>0</td><td>1</td><td style='background:#eee'>0</td></tr>
	<tr><th>Track 3/4</th><td style='background:#eee' colspan='2'>1</td><td colspan='2'>0</td><td style='background:#eee' colspan='2'>1</td><td colspan='2'>0</td></tr>
	<tr><th><span style='background:#72dec2'>true pool</span></th><td>0</td><td style='background:#eee'>1</td><td>0</td><td>0</td><td>0</td><td style='background:#eee'>1</td><td>0</td><td>0</td></tr>
</table>

<img src='../media/generic/noton.logic.jpg'/>

<ul>
	<li><a href='https://git.sr.ht/~rabbits/noton' target='_blank'>source</a></li>
	<li><a href='https://llllllll.co/t/noton-livedrawing-tool/38429' target='_blank'>forum</a></li>
</ul>

