( Left )

|00 @System &vector $2 &expansion $2 &wst $1 &rst $1 &metadata $2 &r $2 &g $2 &b $2 &debug $1 &state $1
|10 @Console &vector $2 &read $1 &pad $4 &type $1 &write $1 &error $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|80 @Controller &vector $2 &button $1 &key $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &pad $3 &scrollx $2 &scrolly $2
|a0 @File &vector $2 &success $1 &success-lb $1 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|000

	@Source &buf $30
	@Search &buf $30
	@selection &a $2 &b $2
	@textarea &highlight $1 &length $2
	@scroll &x $2 &y $2 &addr $2 &ratio $2
	@scrollbar &height $2
	@wrap &left $2 &right $2
	@state &comment $1 &underline $1 &label $1 &rune $1 &raw $1
	@nav &cat $1 &len $1 &buf $60
	@flen/buf $5

|100

@on-reset ( -> )
	( | meta )
	;meta #06 DEO2
	( | theme )
	#e048 .System/r DEO2
	#e0a7 .System/g DEO2
	#e097 .System/b DEO2
	load-theme
	( | size )
	#0550 .Screen/width DEO2
	#02de .Screen/height DEO2
	.Source/buf LDZ ?&soft
	( | cache position )
	.Screen/height DEI2 #0028 SUB2
	( ) DUP2 #0018 DIV2 ;scroll-follow/lines STA2
	( ) #0008 SUB2 .scrollbar/height STZ2
	#07 get-cat-x #0004 ADD2 ;<draw-filepath>/x STA2
	( | defaults )
	#0001 .scroll/ratio STZ2
	#0100 .scroll/x STZ2
	;text <select-a>
	[ LIT2 01 -nav/cat ] STZ
	( | begin )
	<draw-menu>
	<draw-spacer>
	( | default )
	.Console/type DEI ?{
		;on-console .Console/vector DEO2
		file-new untrap BRK }
	( | listen )
	;on-console-arg .Console/vector DEO2
	BRK

	&soft ( -> )
	<draw-menu>
	<draw-spacer>
	[ LIT2 01 -nav/cat ] STZ
	file-open untrap BRK

@meta $1
	( name ) "Left 0a
	( details ) "A 20 "Text 20 "Editor 0a
	( author ) "By 20 "Hundred 20 "Rabbits 0a
	( date ) "23 20 "Dec 20 "2024 $1 02
	( > ) 83 =appicon
	( > ) 0a =manifest

@manifest 07 "Left $1
	( > ) 01 "n =file-new "New $1
	( > ) 01 "r =trap "Rename $1
	( > ) 01 "o =file-reopen "Open $1
	( > ) 01 "s =file-save "Save $1
	( > ) 01 "p =file-send "Send $1
	( > ) 01 "b =file-build "Build $1
	( > ) 01 "q =exit "Exit $1
	( >>>>> ) 07 "Edit $1
	( > ) 01 "c =edit-copy "Copy $1
	( > ) 01 "v =edit-paste "Paste $1
	( > ) 05 "V =edit-paste-binary "Paste 20 "Binary $1
	( > ) 01 "x =edit-cut "Cut $1
	( > ) 00 08 =erase "Erase $1
	( > ) 00 7f =delete "Delete $1
	( > ) 05 "U =start-unicode "Unicode $1
	( >>>>> ) 02 "Go $1
	( . ) 01 "/ =go-directory "Directory $1
	( . ) 01 0d =go-selection "Selection $1
	( >>>>> ) 06 "Format $1
	( . ) 01 "t =format-strip "Strip $1
	( . ) 01 "i =format-trim "Trim $1
	( . ) 01 "y =transform-clip "Clip $1
	( . ) 01 "j =transform-join "Join $1
	( . ) 00 09 =tab "Tab $1
	( . ) 04 09 =untab "Untab $1
	( >>>>> ) 05 "Select $1
	( . ) 01 09 =select-current-word "Word $1
	( . ) 01 "g =select-current-symbol "Symbol $1
	( . ) 08 00 =select-line-start "Line 20 "Start $1
	( . ) 01 "a =select-all "All $1
	( . ) 00 1b =reset-each "Reset $1
	( >>>>> ) 01 "Find $1
	( . ) 01 "f =Search/<capture>
	"Selection $1
	( >>>>> ) 03 "View $1
	( . ) 01 "h =toggle-highlight "Hint $1
	( . ) 01 20 =view-symbol "Symbol $1
	( . ) 01 "l =toggle-categories "Categories $1 $1

(
@|modes )

@trap ( -- )
	;on-frame-trap .Screen/vector DEO2
	;on-button-trap .Controller/vector DEO2
	;on-mouse-trap .Mouse/vector DEO2
	[ LIT2 00 -Mouse/state ] DEO
	#40 !<draw-cursor>

@untrap ( -- )
	;on-frame-draw .Screen/vector DEO2
	;on-button .Controller/vector DEO2
	;on-mouse .Mouse/vector DEO2
	[ LIT2 00 -Mouse/state ] DEO
	( | if filepath is empty, reset to untitled )
	.Source/buf LDZ ?{ ;untitled-txt ;Source/buf scpy }
	#01 !<draw-filepath>

@start-unicode ( -- )
	;on-button-unicode .Controller/vector DEO2
	;unicode/buf <sclr>
	[ LIT2 00 _on-button-unicode/ptr ] STR
	;unicode/buf !<draw-widget-unicode>

@on-button-unicode ( -> )
	.Controller/key DEI
	( | handlers )
	DUP ?{ POP BRK }
	DUP #0d NEQ ?{
		;unicode/buf shex <insert-unicode>
		untrap BRK }
	DUP #08 NEQ ?{ POP untrap reqdraw-textarea BRK }
	DUP #1b NEQ ?{ POP untrap reqdraw-textarea BRK }
	DUP chex INC ?{ POP BRK }
	( | append )
	[ LIT2 00 &ptr 00 ] INCk #01 AND ,&ptr STR
	;unicode/buf ADD2 STA
	;unicode/buf <draw-widget-unicode>
	BRK

(
@|vectors )

@on-console ( -> )
	.Console/read DEI
	( | handle bytes )
	DUP #08 NEQ ?{ POP erase BRK }
	DUP #7f NEQ ?{ POP delete BRK }
	insert BRK

@on-console-arg ( -> )
	.Console/read DEI .Source/buf skey ?{ BRK }
	;on-console .Console/vector DEO2
	file-open untrap BRK

@on-button-trap ( -> )
	.Controller/key DEI
	( | handle bytes )
	DUP #1b EQU ?&escape
	DUP .Source/buf skey ?&open
	POP #01 <draw-filepath>
	BRK

	&open ( c -> )
	file-open
	&escape ( c -> )
	POP untrap BRK

@on-mouse-trap ( -> )
	( | release trap on touch )
	.Mouse/state DEI ?{ BRK }
	untrap BRK

@on-frame-trap ( -> )
	[ LIT &timer $1 ] DUP #07 AND ?{
		DUP #08 AND INC <draw-filepath> }
	INC ,&timer STR
	BRK

@on-frame-draw ( -> )
	#0000 .Screen/vector DEO2
	[ LIT &textarea $1 ] ?{
		<draw-textarea>
		<draw-widget>
		[ LIT2 01 _&textarea ] STR }
	[ LIT &navbar $1 ] ?{
		<draw-navbar>
		[ LIT2 01 _&navbar ] STR }
	BRK

@on-button ( -> )
	.Controller/button DEI2 DUP2 find-modkey ORAk ?&run
	POP2 SWP DUP #f0 AND ?on-button-arrow
	#02 AND ?on-button-alt
	insert BRK

	&run ( cmd* -> )
	JSR2 POP2 BRK

@on-button-arrow ( key button -> )
	NIP
	( | ctrl+alt )
	DUP #43 EQU ?&on-cal
	DUP #83 EQU ?&on-car
	( | special alt )
	DUP #12 EQU ?&on-au
	DUP #22 EQU ?&on-ad
	( | shift )
	DUP #04 AND ?&on-shift
	( | block )
	has-empty? ?{
		DUP #50 AND ?&on-ul-block
		DUP #a0 AND ?&on-dr-block }
	( | standard )
	.selection/a LDZ2 ROT arrow-to-addr <select-a>
	BRK

	&on-cal ( button -> )
	POP .scroll/x LDZ2 #0040 ADD2 <scroll-to-x>
	BRK

	&on-car ( button -> )
	POP .scroll/x LDZ2 #0040 SUB2 <scroll-to-x>
	BRK

	&on-shift ( button -> )
	.selection/b LDZ2 ROT arrow-to-addr <select-b>
	BRK

	&on-au ( button -> )
	POP select-prev-marker BRK

	&on-ad ( button -> )
	POP select-next-marker BRK

	&on-ul-block ( button -> )
	POP get-from <select-a>
	BRK

	&on-dr-block ( button -> )
	POP get-to <select-a>
	BRK

@on-button-alt ( key -> )
	DUP ?{ POP BRK }
	DUP #1b NEQ ?{ POP edit-inject BRK }
	.Search/buf skey ?{
		reqdraw-textarea update-nav BRK }
	#00 <select-marker>
	BRK

@on-mouse ( -> )
	.Mouse/y DEI2
	( ) DUP2 #0018 LTH2 ?&trap
	( ) #0028 LTH2 ?&void
	.Mouse/scrolly DEI2 DUP ?on-mouse-scroll
	POP2
	( | regions )
	.Mouse/x DEI2
	( ) DUP2 #0100 GTH2 ?on-mouse-textarea
	( ) DUP2 #000d LTH2 ?on-mouse-scrollbar
	( ) #00f8 LTH2 ?on-mouse-navbar
	&void ( -- )
	#43 <update-cursor>
	[ LIT2 00 -Mouse/state ] DEO
	BRK

	&trap ( -> )
	POP2 !trap-menu

@on-mouse-scroll ( y* -> )
	[ LIT2 04 -Controller/button ] DEI NEQ ?{ <scroll-by-x>
		BRK }
	<scroll-by-y>
	BRK

@on-mouse-textarea ( x* -> )
	[ LIT2 00 -Mouse/state ] DEI NEQ #41 ADD <update-cursor>
	POP2 [ LIT2 &last $1 -Mouse/state ] DEI DUP ,&last STR
	( ) ANDk ?&on-drag
	( ) DUP #01 EQU ?&on-down1
	( ) DUP #02 NEQ ?{ touch-to-addr <select-symbol> }
	( ) DUP #04 NEQ ?{ Search/<capture> }
	POP2 [ LIT2 00 -Mouse/state ] DEO
	BRK

	&on-down1 ( a b -> )
	[ LIT2 04 -Controller/button ] DEI EQU ?&on-drag
	touch-to-addr <select-a>
	POP2 BRK

	&on-drag ( a b -> )
	touch-to-addr <select-b>
	POP2 BRK

@on-mouse-scrollbar ( x* -> )
	POP2
	( ) [ LIT2 00 -Mouse/state ] DEI NEQ #42 ADD <update-cursor>
	.Mouse/y DEI2 .Mouse/state DEI [ LIT &last $1 ]
	( | on drag )
	ANDk #01 NEQ ?{
		OVR2 [ LIT2 &drag $2 ] SUB2 .scroll/ratio LDZ2 MUL2 <scroll-by-y> }
	OVR #01 NEQ ?{
		OVR2 .scrollbar/height LDZ2 SUB2 #0028 SUB2 #0008 GTH2 ?{
			[ LIT2 00 -Mouse/state ] DEO
			toggle-categories }
		OVR2 ,&drag STR2 }
	POP ,&last STR
	POP2 BRK

@on-mouse-navbar ( -> )
	[ LIT2 00 -Mouse/state ] DEI NEQ #41 ADD <update-cursor>
	.Mouse/y DEI2 #0028 SUB2 #0018 DIV2 NIP .Mouse/state DEI DUP ?{ POP2 BRK }
	[ LIT2 00 -Mouse/state ] DEO
	#01 GTH ?{ <select-marker>
		BRK }
	get-marker addr-to-line <set-scroll-y>
	BRK

(
@|actions )

@toggle-highlight ( -- )
	.textarea/highlight LDZk #01 EOR SWP STZ !reqdraw-textarea

@toggle-categories ( -- )
	.nav/cat LDZk #01 EOR SWP STZ
	<draw-cat> !update-nav

@view-symbol ( -- )
	get-from <select-symbol> !Search/<capture>

@reset-each ( -- )
	has-length? ?&reset-selection
	.scroll/x LDZ2 #0100 NEQ2 ?&reset-scroll
	.Search/buf LDZ ?Search/<reset>
	JMP2r

	&reset-selection ( -- )
	get-from DUP2 !<select-range>

	&reset-scroll ( -- )
	#0100 !<scroll-to-x>

@arrow-to-addr ( addr* button -- addr* )
	DUP #01 AND ?&ctrl
	DUP #02 AND ?&alt
	#04 SFT
	( | default )
	DUP #01 NEQ ?{ POP !find-line-prev }
	DUP #02 NEQ ?{ POP !find-line-next }
	DUP #04 NEQ ?{ POP !prev-glyph }
	DUP #08 NEQ ?{ POP !next-glyph }
	&ctrl ( addr* button -- addr* )
	#04 SFT
	( | ctrl )
	DUP #04 NEQ ?{ POP !find-line-start }
	DUP #08 NEQ ?{ POP !find-line-end }
	&alt ( addr* button -- addr* )
	#04 SFT
	( | alt )
	DUP #04 NEQ ?{ POP !find-prev-special-top }
	DUP #08 NEQ ?{ POP !find-next-special }
	POP JMP2r

(
@|editing )

@<put-byte> ( byte addr* -- )
	ROT DUP #04 SFT hexc SWP hexc SWP2 STA2
	JMP2r

@<insert-unicode> ( addr* -- )
	#c2c0 ADD2 SWP insert !insert

@<insert-char> ( c addr* -- )
	DUP2 #0001 <msfr>
	STA
	#0001 !<mod-length>

@<cut-char> ( addr* -- )
	#0001 <msfl>
	#ffff
	( >> )

@<mod-length> ( change* -- )
	.textarea/length LDZ2 ADD2 .textarea/length STZ2
	reqdraw-textarea reqdraw-navbar #0a !<draw-state>

@erase-selection ( -- )
	get-from get-length STH2k <msfl>
	update-nav #0000 STH2r SUB2 !<mod-length>

@join-spaces ( addr* -- addr* )
	[ LIT2r 0000 ]
	&>w ( -- )
		LDA2k #2020 NEQ2 ?{ DUP2 <cut-char>
			INC2r !&>w }
	STH2r JMP2r

@insert ( char -- )
	DUP #09 LTH ?{
		( convert lb ) DUP #0d EQU #03 MUL SUB
		( ) has-length? ?&block
		( ) get-eof #fff0 NEQ2 ?&single }
	POP JMP2r

	&block ( c -- )
	erase-selection
	( >> )
	&single ( c -- )
	get-from STH2k <insert-char>
	STH2r INC2 !<select-a>

@erase ( -- )
	has-length? ?erase-block
	get-from DUP2 ;text GTH2 ?&single
	POP2 JMP2r

	&single ( from* -- )
	#0001 SUB2 LDAk #06 SFT #02 EQU ?&single-utf8
	DUP2 <cut-char> !<select-a>

	&single-utf8 ( from* -- )
	prev-glyph get-to <select-range>
	( >> )

@erase-block ( -- )
	erase-selection !<select-reset>

@delete ( -- )
	has-length? ?erase-block
	get-from INC2k get-eof NEQ2 ?&single
	POP2 JMP2r

	&single ( from* -- )
	DUP2 <cut-char> !<select-a>

@tab ( -- )
	has-length? ?&block
	#09 !insert

	&block ( -- )
	( a ) get-from find-line-start
	( b ) get-to find-line-end OVR2 #0001 SUB2
	&>l ( -- )
		LDAk #0a NEQ ?{
			INC2 STH2k #09 STH2r <insert-char>
			SWP2 INC2 SWP2 }
		INC2 GTH2k ?&>l
	POP2 #0001 SUB2 !<select-range>

@untab ( -- )
	( a ) get-from find-line-start
	( b ) get-to find-line-end OVR2 #0001 SUB2
	&>l ( -- )
		LDA2k #0a09 NEQ2 ?{
			INC2k <cut-char>
			SWP2 #0001 SUB2 SWP2 }
		INC2 GTH2k ?&>l
	POP2 #0001 SUB2 !<select-range>

(
@|selection )

@select-all ( -- )
	;text
	( ) DUP2 .selection/a STZ2
	.textarea/length LDZ2 ADD2 #0001 SUB2 .selection/b STZ2 !reqdraw-textarea

@select-line-start ( -- )
	get-from find-line-prev !<select-a>

@select-current-symbol ( -- )
	get-from
	( >> )

@<select-symbol> ( addr* -- )
	DUP2 find-prev-special/ SWP2 find-next-special/
	( ) OVR2 get-from EQU2 STH
	DUP2 get-to EQU2 STHr AND ?&reselect
	!<select-range>
	&reselect POP2 !<select-word>

@select-current-word ( -- )
	get-from
	( >> )

@<select-word> ( addr* -- )
	DUP2 find-prev-spacer SWP2 find-next-spacer/ !<select-range>

@select-prev-marker ( -- )
	get-from get-current-marker
	&>l ( -- )
		#01 SUB DUP get-marker INC2 LDA [ LIT "| ] EQU ?&>l
	!<select-marker>

@select-next-marker ( -- )
	get-from get-current-marker
	&>l ( -- )
		INC DUP get-marker INC2 LDA [ LIT "| ] EQU ?&>l
	( >> )

@<select-marker> ( id -- )
	get-marker DUP2 ;Search/buf slen ADD2 !<select-range>

@<select-reset> ( -- )
	get-from
	( >> )

@<select-a> ( addr* -- )
	DUP2
	( >> )

@<select-range> ( from* to* -- )
	( changed ) [ LITr 00 ]
	( | to )
	clamp-addr DUP2 .selection/b LDZ2 EQU2 ?{ INCr }
	.selection/b STZ2
	( | from )
	clamp-addr DUP2 .selection/a LDZ2 EQU2 ?{ INCr }
	.selection/a STZ2
	STHr ?selection-changed
	JMP2r

@<select-b> ( addr* -- )
	clamp-addr DUP2 .selection/b LDZ2 NEQ2 ?{ POP2 JMP2r }
	.selection/b STZ2
	( >> )

@selection-changed ( -- )
	scroll-follow update-wrap update-nav !reqdraw-textarea

@get-from ( -- addr* )
	.selection/b LDZ2 .selection/a LDZ2 LTH2k [ JMP SWP2 ] POP2 JMP2r

@get-to ( -- addr* )
	.selection/a LDZ2 .selection/b LDZ2 GTH2k [ JMP SWP2 ] POP2 JMP2r

@get-length ( -- length* )
	get-to get-from SUB2 JMP2r

@has-length? ( -- bool )
	.selection/a LDZ2 .selection/b LDZ2 NEQ2 JMP2r

@has-empty? ( -- bool )
	.selection/a LDZ2 .selection/b LDZ2 EQU2 JMP2r

(
@|search )

@Search/<reset> ( -- )
	#0000 .&buf STZ2
	reqdraw-textarea !update-nav

@Search/<capture> ( -- )
	has-length? ?{ get-to !<select-word> }
	( dst ) [ LITr -&buf ]
	( from ) get-from
	( to ) get-length #002f LTH2k [ JMP SWP2 ] POP2 ADD2k NIP2 SWP2
	&>l ( -- )
		LDAk STHkr STZ
		INCr INC2 GTH2k ?&>l
	POP2 POP2
	( cap ) #00 STHr STZ
	update-nav reqdraw-textarea !reqdraw-navbar

(
@|find )

@find-line-next ( addr* -- addr* )
	find-line-end INC2 JMP2r

@find-line-prev ( addr* -- addr* )
	#0001 SUB2
	( >> )

@find-line-start ( addr* -- addr* )
	;text #0001 SUB2 SWP2
	&>l ( -- )
		prev-glyph LDAk #0a EQU ?{ LTH2k ?&>l }
	NIP2 INC2 JMP2r

@find-line-end ( addr* -- addr* )
	get-eof SWP2
	&>w ( -- )
		EQU2k ?{
			next-glyph LDAk #0a NEQ ?&>w }
	NIP2 JMP2r

@find-prev-spacer ( addr* -- addr* )
	prev-glyph LDAk #20 GTH ?find-prev-spacer
	INC2 JMP2r

@find-next-spacer ( addr* -- addr* )
	next-glyph & LDAk #20 GTH ?find-next-spacer
	JMP2r

@find-prev-special-top ( addr* -- addr* )
	#0001 SUB2

@find-prev-special ( addr* -- addr* )
	prev-glyph & LDAk clab? ?find-prev-special
	INC2 JMP2r

@find-next-special ( addr* -- addr* )
	next-glyph & LDAk clab? ?find-next-special
	JMP2r

@find-first-marker ( addr* -- addr* )
	#0002 SUB2
	&>w ( -- )
		DUP2 ;text LTH2 ?{
			prev-glyph LDA2k [ LIT2 0a "@ ] NEQ2 ?&>w }
	JMP2r

(
@|scroll )

@<scroll-by-x> ( x* -- )
	?{ POP JMP2r }
	#0010 ROT ?{ POP2 #fff0 }
	.scroll/x LDZ2 ADD2
	( >> )

@<scroll-to-x> ( line* -- )
	DUP2 .scroll/x LDZ2 EQU2 ?&end
	DUP2 #0101 SUB2 #8000 LTH2 ?&end
	.scroll/x STZ2
	reqdraw-navbar !reqdraw-textarea
	&end POP2 JMP2r

@<scroll-by-y> ( y* -- )
	.scroll/y LDZ2 ADD2
	( >> )

@<set-scroll-y> ( line* -- )
	update-scrollbar
	( unchanged ) DUP2 .scroll/y LDZ2 NEQ2 ?{ POP2 JMP2r }
	DUP2 line-to-addr DUP2 get-eof #0002 SUB2 GTH2 ?{
		;text SUB2 .scroll/addr STZ2
		.scroll/y STZ2
		<draw-position>
		reqdraw-textarea !update-nav }
	POP2 POP2 JMP2r

@line-to-addr ( line* -- addr* )
	STH2
	[ LIT2r 0000 ] ;text
	&>w ( -- )
		EQU2kr STHr ?&end
		LDAk #0a NEQ [ JMP INC2r ] INC2 LDAk ?&>w &end POP2r POP2r JMP2r

@get-scroll-addr ( -- addr* )
	.scroll/addr LDZ2 ;text ADD2 JMP2r

@scroll-follow ( -- )
	get-to
	( | horizontal )
	DUP2 addr-to-x .scroll/x LDZ2 ADD2 .Screen/width DEI2 LTH2 ?{
		( follow by steps of 40 ) #0040 <scroll-by-x> }
	( | vertical )
	addr-to-line .scroll/y LDZ2 LTH2k ?&move
	[ LIT2 &lines $2 ] ADD2 GTH2k ?&move
	POP2 POP2 JMP2r

	&move ( target* scroll/y* -- )
	POP2 !<set-scroll-y>

@update-scrollbar ( -- )
	#0001 count-lines .scrollbar/height LDZ2 DIV2 NIP #40 SFT SFT2 .scroll/ratio STZ2
	JMP2r

(
@|nav )

@update-nav ( -- )
	[ LIT2 00 -nav/len ] STZ
	.Search/buf LDZ ?update-nav-search
	get-eof get-scroll-addr find-first-marker
	&>l ( -- )
		LDAk #0a NEQ ?{
			INC2k LDA DUP [ LIT "@ ] NEQ SWP [ LIT "% NEQ ] AND ?{ INC2k add-marker } }
		( | reached bottom )
		.nav/len LDZ #20 GTH ?&end
		INC2 GTH2k ?&>l &end POP2 POP2 !reqdraw-navbar

@update-nav-search ( -- )
	get-eof ;text
	&>l ( -- )
		LDA2k [ LIT2 0a "@ ] NEQ2 ?&no-flabel
		INC2k LDA2 [ LIT2 "@| ] NEQ2 ?&no-flabel
		INC2k add-marker &no-flabel ;Search/buf OVR2 sseg? #00 EQU ?&no-find
		DUP2 add-marker &no-find .nav/len LDZ #20 GTH ?&end
		INC2 GTH2k ?&>l &end POP2 POP2 !reqdraw-navbar

@add-marker ( addr* -- )
	( | toggle categories )
	INC2k LDA [ LIT "| ] NEQ .nav/cat LDZ ORA ?{ POP2 JMP2r }
	.nav/len LDZk INCk ROT STZ
	DUP ADD .nav/buf ADD STZ2
	JMP2r

@get-marker ( id -- addr*/sel* )
	( | no markers )
	.nav/len LDZ ?{ POP !get-from }
	( | reached end )
	DUP .nav/len LDZ LTH ?{ POP !get-from }
	DUP ADD .nav/buf ADD LDZ2 JMP2r

@get-current-marker ( addr* -- id )
	STH2
	.nav/len LDZ #00
	&>l ( -- )
		DUP get-marker #0001 SUB2 STH2kr GTH2 ?&end
		INC GTHk ?&>l &end NIP #01 SUB POP2r JMP2r

@get-marker-color ( id sel -- color )
	OVR EQU ?&selected
	get-marker INC2 LDA [ LIT "| ] EQU #03 MUL INC JMP2r

	&selected ( id -- color )
	POP #09 JMP2r

(
@|helpers )

%get-glyph-width ( addr* -- addr* width* ) {
	LDAk #09 NEQ #0018 ROT SFT2 }

@get-strw ( str* -- width* )
	[ LIT2r 0000 ] LDAk #00 EQU ?{
		&>w ( -- )
			get-glyph-width STH2
			ADD2r INC2 LDAk ?&>w }
	POP2 STH2r JMP2r

@get-eof ( -- addr* )
	;text .textarea/length LDZ2 ADD2 JMP2r

@get-rune ( addr* -- addr* index* )
	LDAk ,&c STR
	;runes/lit DUP2
	&>w ( -- )
		LDAk [ LIT &c $1 ] EQU ?{
			INC2 LDAk ?&>w
		POP2 POP2 #ffff JMP2r }
	SWP2 SUB2 JMP2r

@count-lines ( -- line* )
	[ LITr -scroll/y ] LDZ2r get-scroll-addr
	&>w ( -- )
		LDAk #0a NEQ [ JMP INC2r ] INC2 LDAk ?&>w
	POP2 STH2r JMP2r

@addr-to-line ( addr* -- line* )
	LIT2r 0000 ;text EQU2k ?&end
	&>l ( -- )
		LDAk #0a NEQ [ JMP INC2r ] INC2 GTH2k ?&>l &end POP2 POP2 STH2r JMP2r

@touch-to-addr ( -- addr* )
	<reset-state>
	( goto y ) ( b ) .Mouse/y DEI2 #0028 SUB2 #0018 DIV2 STH
	POP
	( a ) [ LITr 00 ] get-scroll-addr
	&>ver ( -- )
		EQUkr STHr ?&ver-end
		scan-state LDAk #0a NEQ [ JMP INCr ] next-glyph LDAk ?&>ver &ver-end POP2r
	( goto x ) ( b ) .Mouse/x DEI2 .scroll/x LDZ2 SUB2 STH2
	( a ) LIT2r 0000
	&>hor ( -- )
		LDAk #0a EQU ?&hor-end
		scan-state get-glyph-width STH2
		ADD2r LTH2kr STHr ?&hor-end
		next-glyph LDAk ?&>hor &hor-end POP2r POP2r #0000 .state STZ2
	JMP2r

@addr-to-x ( addr* -- x* )
	[ LIT2r 0000 ]
	( ) DUP2 find-line-start EQU2k ?{
		&>l ( -- )
			get-glyph-width STH2
			ADD2r next-glyph GTH2k ?&>l }
	POP2 POP2 STH2r JMP2r

@balance-wrap ( c -- offset )
	DUP LIT "( EQU ?&a
	DUP LIT "[ EQU ?&a
	DUP LIT "{ EQU ?&a
	DUP LIT ") EQU ?&b
	DUP LIT "] EQU ?&b
	DUP LIT "} EQU ?&b
	POP #00 JMP2r
	&a POP #ff JMP2r
	&b POP #01 JMP2r

@update-wrap ( -- )
	#0000 .wrap/left STZ2k INC INC STZ2
	.selection/b LDZ2
	( | left )
	[ LITr 01 ] .scroll/addr LDZ2 ;text ADD2 #0001 SUB2 OVR2 #0001 SUB2 EQU2k ?{
		&l ( -- )
		LDAk balance-wrap STH
		ADDr STHkr ?{ .wrap/left STZ2 !&end-l }
		prev-glyph LTH2k ?&l }
	POP2 &end-l POP2 POPr
	( | right )
	[ LITr 01 ] get-eof SWP2 EQU2k ?{
		&r ( -- )
		LDAk balance-wrap STH
		SUBr STHkr ?{ .wrap/right STZ2 !&end-r }
		next-glyph GTH2k ?&r }
	POP2 &end-r POP2 POPr JMP2r

@clamp-addr ( addr* -- addr* )
	( min ) ;text GTH2k [ JMP SWP2 ] POP2
	( max ) get-eof #0001 SUB2 LTH2k [ JMP SWP2 ] POP2 JMP2r

@<reset-state> ( -- )
	[ LIT2 00 -state/underline ] STZ
	[ LIT2 00 -state/label ] STZ
	[ LIT2 00 -state/comment ] STZ
	[ LIT2 00 -state/rune ] STZ
	[ LIT2 00 -state/raw ] STZ
	JMP2r

@walk-word ( addr* -- addr* )
	INC2 & LDAk #20 GTH ?walk-word
	JMP2r

@scan-state ( addr* -- addr* )
	.textarea/highlight LDZ ?&skip
	( | reset always )
	[ LIT2 00 -state/rune ] STZ
	( | reset on ws )
	LDAk #20 GTH ?{
		[ LIT2 00 -state/underline ] STZ
		[ LIT2 00 -state/label ] STZ
		[ LIT2 00 -state/raw ] STZ }
	( | blocks )
	DUP2 #0002 SUB2 LDAk #20 GTH ?{
		INC2k LDA [ LIT ") ] EQU ?&comment-end }
	INC2 LDAk #20 GTH ?{
		POP2
		( ) LDAk [ LIT "( ] EQU ?&comment-start
		.state/comment LDZ ?{
			LDAk [ LIT "@ ] EQU ?&label
			LDAk [ LIT "& ] EQU ?&label
			LDAk [ LIT "% ] EQU ?&label
			LDAk [ LIT "" ] EQU ?&raw
			LDAk [ LIT "$ ] EQU ?&raw
			get-rune INC2 ORA ?&rune }
		JMP2r }
	POP2
	( | after ws )
	&skip JMP2r

	&comment-start ( -- )
	.state/comment LDZk INC SWP STZ
	JMP2r

	&comment-end ( cc* -- )
	POP2 .state/comment LDZk DUP #00 NEQ SUB SWP STZ
	JMP2r

	&label ( -- )
	[ LIT2 01 -state/label ] STZ
	JMP2r

	&rune ( -- )
	[ LIT2 01 -state/rune ] STZ
	LDAk [ LIT "_ ] EQU ?&raw
	LDAk [ LIT "- ] EQU ?&raw
	LDAk [ LIT "= ] EQU ?&raw
	LDAk DUP [ LIT "? ] EQU SWP [ LIT "! ] EQU ORA ?{ JMP2r }
	[ LIT2 01 -state/underline ] STZ
	JMP2r

	&raw ( -- )
	[ LIT2 01 -state/raw ] STZ
	JMP2r

@get-color ( addr* -- addr* color )
	DUP2 get-from LTH2 ?&no-selected
	DUP2 get-to LTH2 ?&selected
	&no-selected ( -- )
	DUP2 .wrap/left LDZ2 EQU2 ?&wrap
	DUP2 .wrap/right LDZ2 EQU2 ?&wrap
	.textarea/highlight LDZ ?&skip
	.state/comment LDZ ?&comment
	.state/raw LDZ ?&comment
	.state/label LDZ ?&label &skip #01 JMP2r
	&selected .Search/buf LDZ ?{ #09 JMP2r }
	#0d JMP2r
	&label #02 JMP2r
	&comment #03 JMP2r
	&wrap #02 JMP2r

@get-glyph-addr ( addr* -- addr* glyph* )
	LDAk #80 LTH ?&ascii
	LDAk #c3 EQU ?&latin-high
	;font/blank JMP2r

	&ascii ( addr* -- addr* glyph* )
	.state/rune LDZ ?&rune
	LDAk #00 SWP #0030 MUL2 ;font ADD2 JMP2r

	&rune ( -- glyph* )
	get-rune #0030 MUL2 ;font/runes ADD2 JMP2r

	&latin-high ( addr* -- addr* glyph* )
	LDA2k #c380 SUB2 #0030 MUL2 ;latin-high ADD2 JMP2r

@prev-glyph ( addr* -- addr* )
	#0001 SUB2 LDAk
	( utf8 continuation ) #06 SFT #02 EQU ?prev-glyph
	JMP2r

@next-glyph ( addr* -- addr* )
	INC2 LDAk
	( utf8 continuation ) #06 SFT #02 EQU ?next-glyph
	JMP2r

(
@|go )

@zcap ( zstr -- zstr )
	LDZk ?{ JMP2r }
	INC !zcap

@go-directory ( -- )
	<clear-filepath>
	.Source/buf DUP zcap EQUk ?&go-root
	#01 SUB EQUk ?&go-root
	&>w ( -- )
		#01 SUB LDZk [ LIT "/ ] EQU ?{
			NEQk ?&>w
		&go-root [ LIT2 ". 00 ] ROT STZ2
		POP !file-open }
	#00 SWP INC STZ
	POP !file-open

@go-selection ( -- )
	<clear-filepath>
	get-to get-from EQU2k ?{
		( | append if in folder )
		.Source/buf DUP zcap DUP #01 SUB LDZ [ LIT "/ ] NEQ [ JMP SWP ] POP STH
		&>l ( -- )
			LDAk STHkr STZ
			INCr INC2 GTH2k ?&>l
		POP2 POP2 #00 STHr STZ !file-open }
	JMP2r

(
@|document )

@file-new ( -- )
	( | clear )
	;text <sclr>
	#0001 .textarea/length STZ2
	( | rename to untitled.txt )
	;untitled-txt ;Source/buf scpy
	( | reset position )
	#05 <draw-state>
	;text <select-a>
	#0000 <set-scroll-y>
	( | draw )
	#01 <draw-filepath>
	update-nav !reqdraw-textarea

@file-open ( -- )
	#0000 <set-scroll-y>
	#0100 <scroll-to-x>
	;text <select-a>
	Search/<reset>
	( >> )

@file-reopen ( -- )
	;text <sclr>
	;Source/buf DUP2 fbin? ?file-open-binary
	.File/name DEO2
	#fff0 ;text SUB2 .File/length DEO2
	;text .File/read DEO2
	.File/success DEI2 INC2 .textarea/length STZ2
	file-detect
	( | draw )
	update-scrollbar update-nav <select-reset>
	#01 <draw-filepath>
	#05 <draw-state> !reqdraw-textarea

@file-open-binary ( path* -- )
	.File/name DEO2
	;text <inject-binary>
	;text SUB2 .textarea/length STZ2
	( | continue )
	[ LIT2 01 -textarea/highlight ] STZ
	<select-reset>
	#01 <draw-filepath>
	#0a <draw-state> !reqdraw-textarea

@file-save ( -- )
	;Source/buf .File/name DEO2
	;text DUP2 slen .File/length DEO2
	.File/write DEO2
	#05 !<draw-state>

@file-send ( -- )
	get-to get-from SUB2k #0002 GTH2 ?{ POP2 POP2 get-eof ;text }
	&>l ( -- )
		( | merge whitespaces )
		LDAk #20 GTHk [ JMP SWP ] POP DUP #20 EQU OVR [ LIT &last 20 ] EQU AND ?{ DUP #18 DEO }
		,&last STR
		INC2 GTH2k ?&>l
	POP2 POP2
	( cap ) #0a18 DEO
	JMP2r

@file-build ( -- )
	;Source/buf <pstr>
	#0a18 DEO
	JMP2r

@file-inject ( name* -- )
	DUP2 fbin? ?file-inject-binary
	( skip if empty ) DUP2 flen ORAk ?{ POP2 POP2 JMP2r }
	( erase sel ) has-empty? ?{ erase-selection }
	( | name* addr* )
	SWP2 .File/name DEO2
	( stash length ) STH2k .File/length DEO2
	( push right ) get-from STH2kr <msfr>
	STH2kr <mod-length>
	get-from .File/read DEO2
	get-from STH2r ADD2 !<select-a>

@file-inject-binary ( name* -- )
	( skip if empty ) DUP2 flen ORAk ?{ POP2 POP2 JMP2r }
	( erase sel ) has-empty? ?{ erase-selection }
	( | name* addr* )
	SWP2 .File/name DEO2
	( stash length ) DUP2 ADD2 DUP2 #02 SFT2 ADD2 STH2
	( push right ) get-from STH2kr <msfr>
	STH2kr <mod-length>
	get-from <inject-binary>
	POP2 get-from STH2r ADD2 !<select-a>

@file-detect ( -- )
	file-is-dir? ?&dir
	file-is-tal? ?&tal
	[ LIT2 01 -textarea/highlight ] STZ
	JMP2r

	&dir ( -- )
	[ LIT2 01 -textarea/highlight ] STZ
	JMP2r

	&tal ( -- )
	[ LIT2 00 -textarea/highlight ] STZ
	JMP2r

@file-is-dir? ( -- bool )
	.Source/buf zcap #01 SUB LDZ DUP [ LIT "/ ] EQU SWP [ LIT ". ] EQU ORA JMP2r

@file-is-tal? ( -- bool )
	;Source/buf scap/ #0004 SUB2 ;&tal-ext !scmp?

	&tal-ext ".tal $1

@<inject-binary> ( addr* -- addr* )
	#0001 .File/length DEO2
	STH2
	#0000
	&s ( -- )
	;&b feof? ?{
		[ LIT &b $1 ] STH2kr INC2r INC2r <put-byte>
		INC2
		( | format )
		DUP #01 AND ?&s
		DUP #0f AND #00 NEQ #16 MUL #0a ADD STH2kr INC2r STA !&s }
	POP2 STH2r JMP2r

(
@|edit )

@edit-cut ( -- )
	has-length? ?{ JMP2r }
	edit-copy erase-selection <select-reset> !reqdraw-textarea

@edit-copy ( -- )
	has-length? ?{ JMP2r }
	;snarf-txt .File/name DEO2
	get-length .File/length DEO2
	get-from .File/write DEO2
	JMP2r

@edit-paste ( -- )
	;snarf-txt !file-inject

@edit-paste-binary ( -- )
	;snarf-txt !file-inject-binary

@edit-inject ( -- )
	;Search/buf !file-inject

@format-strip ( -- )
	get-eof ;text
	&>l ( -- )
		LDA2k #0920 NEQ2 ?{ INC2k <cut-char> !&>l }
	LDA2k #2009 NEQ2 ?{ DUP2 <cut-char> !&>l }
	LDA2k #2020 NEQ2 ?{ INC2k <cut-char> !&>l }
	LDA2k #200a NEQ2 ?{ DUP2 <cut-char> !&>l }
	LDA2k #090a NEQ2 ?{ DUP2 <cut-char> !&>l }
	LDA2k #0a20 NEQ2 ?{ INC2k <cut-char> !&>l }
	INC2 GTH2k ?&>l
	POP2 POP2 <select-reset>
	update-nav !reqdraw-textarea

@format-trim ( -- )
	[ LIT2r 0000 ] get-to get-from
	&>l ( -- )
		join-spaces STH2
		ADD2r INC2 GTH2k ?&>l
	POP2 STH2r SUB2 !<select-b>

@transform-clip ( -- )
	[ LITr 00 ] get-to get-from
	&>l ( -- )
		LDAk #20 NEQ ?&no-ws
		INC2k wlen NIP STHkr ADD #50 LTH ?&no-ws
		STH2k #0a STH2r STA
		POPr LITr 00 &no-ws INC2 INC2r GTH2k ?&>l
	POP2 POP2 POPr update-nav !reqdraw-textarea

@transform-join ( -- )
	get-to get-from
	&>l ( -- )
		LDAk #20 GTH ?{ STH2k #20 STH2r STA }
		INC2 GTH2k ?&>l
	POP2 POP2 update-nav !reqdraw-textarea

(
@|handlers )

@reqdraw-navbar ( -- )
	#00 ;on-frame-draw/navbar STA
	;on-frame-draw .Screen/vector DEO2
	JMP2r

@reqdraw-textarea ( -- )
	#00 ;on-frame-draw/textarea STA
	;on-frame-draw .Screen/vector DEO2
	JMP2r

(
@|drawing )

@redraw-all ( -- )
	( | clear menu )
	#0010 .Screen/x DEO2
	#0030 .Screen/y DEO2
	[ LIT2 a0 -Screen/pixel ] DEO
	#01 <draw-filepath>
	<draw-spacer>
	( | draw )
	<draw-navbar>

@<draw-textarea> ( -- )
	( | clear )
	#0100 .Screen/x DEO2
	#0028 .Screen/y DEO2
	[ LIT2 80 -Screen/pixel ] DEO
	( | reset state )
	<reset-state>
	( | paint )
	.scroll/x LDZ2 .Screen/x DEO2
	#0028 .Screen/y DEO2
	[ LIT2 25 -Screen/auto ] DEO
	get-scroll-addr
	&>l ( -- )
		scan-state get-color ;draw-glyph-utf8/color STA
		draw-glyph-utf8 LDAk #0a NEQ ?{
			<draw-lb>
			.Screen/y DEI2 .Screen/height DEI2 #0010 SUB2 GTH2 ?&end
			.scroll/x LDZ2 .Screen/x DEO2 }
		next-glyph LDAk ?&>l
	( | draw size left )
	.scroll/x LDZ2 .Screen/x DEO2
	.Screen/y DEI2k #0018 ADD2 ROT DEO2
	#0000 OVR2 SUB2 #0f <draw-decimal>
	;dict/bytes-free <draw-str>
	POP2
	&end ( draw blinker )
	POP2 get-from <draw-atcursor>
	.Screen/y DEI2k #0008 SUB2 ROT DEO2
	;blinker-icn .Screen/addr DEO2
	#0f0a .Search/buf LDZ ?{ SWP }
	POP .Screen/sprite DEO
	JMP2r

@draw-glyph-utf8 ( addr* -- addr* )
	[ LITr -Screen/x ] DEI2r get-glyph-width STH2
	( glyph* ) get-glyph-addr .Screen/addr DEO2
	( draw2 ) [ LIT2r &color 01 -Screen/sprite ] DEOkr
	( tab width ) LDAk #09 NEQ [ JMP DEOkr ] DEOr
	( | underline )
	[ LIT2 00 -state/underline ] LDZ EQU ?{
		OVR2r [ LITr -Screen/x ] DEO2r
		;font/underline .Screen/addr DEO2
		[ LIT2 05 -Screen/sprite ] DEOk DEO }
	ADD2r [ LITr -Screen/x ] DEO2r
	JMP2r

@<draw-glyph-plain> ( char -- )
	[ LITr -Screen/x ] DEI2r [ LIT2r 000c ] ADD2r
	( glyph* ) #00 SWP #0030 MUL2 ;font ADD2 .Screen/addr DEO2
	( draw2 ) [ LIT2 &color 01 -Screen/sprite ] DEOk DEO
	[ LITr -Screen/x ] DEO2r
	JMP2r

@<draw-glyph-icon> ( length* addr* -- )
	.Screen/addr DEO2
	.Screen/x DEI2
	( ) ;draw-glyph-utf8/color LDA .Screen/sprite DEO
	ADD2 .Screen/x DEO2
	JMP2r

@draw-word-until ( str* x* color -- str* )
	;draw-glyph-utf8/color STA
	,&x STR2
	&>w ( -- )
		.Screen/x DEI2 [ LIT2 &x $2 ] LTH2 ?{
			walk-word/
			( ) #0006 ;dotdot-icn !<draw-glyph-icon> }
		draw-glyph-utf8 next-glyph LDAk #20 GTH ?&>w
	JMP2r

@<draw-navbar> ( -- )
	( | clear )
	#0100 .Screen/x DEO2
	#0028 .Screen/y DEO2
	[ LIT2 90 -Screen/pixel ] DEO
	<reset-state>
	( | draw )
	[ LIT2 25 -Screen/auto ] DEO
	get-from get-current-marker ,&sel STR
	.nav/len LDZ #00 EQUk ?<draw-navbar-empty>
	&>l ( -- )
		#000a .Screen/x DEO2
		DUP [ LIT &sel $1 ] get-marker-color STH
		( cap ) ;marker-icns .Screen/addr DEO2
		STHkr #02 SFT .Screen/sprite DEO
		DUP get-marker find-prev-spacer
		( label ) LDA2k [ LIT2 "@| ] NEQ2 ?{ INC2 INC2 }
		#00e0 STHkr draw-word-until POP2
		( cap ) ;marker-icns/end .Screen/addr DEO2
		STHr #02 SFT .Screen/sprite DEO
		<draw-lb>
		INC GTHk ?&>l
	POP2 <draw-cat>
	( >> )

@<draw-scrollbar> ( -- )
	#0004 .Screen/x DEO2
	( | bg )
	#0028 .Screen/y DEO2
	[ LIT2 04 -scrollbar/height ] LDZ2 #03 SFT2 SUB
	( ) ;checkered-icn #02 <draw-times>
	( | fg )
	#0028 .scroll/y LDZ2 .scroll/ratio LDZ2 STH2k DIV2 ADD2 .Screen/y DEO2
	[ LIT2 05 -Screen/height ] DEI2 count-lines STH2r DIV2 SUB2 #0028 SUB2 #03 SFT2 SUB
	( ) ;fill-icn #02 !<draw-times>

@<draw-navbar-empty> ( range* -- )
	POP2 #0010 .Screen/x DEO2
	#0028 .Screen/y DEO2
	#03 ;<draw-glyph-plain>/color STA
	;dict/empty <draw-str>
	POP2 <draw-scrollbar> !<draw-cat>

@<draw-state> ( state -- )
	#0002 .Screen/x DEO2
	#0004 .Screen/y DEO2
	[ LIT2 25 -Screen/auto ] DEO
	;font/diamond .Screen/addr DEO2
	.Screen/sprite DEOk DEO
	JMP2r

@<draw-cat> ( -- )
	#0004 .Screen/x DEO2
	.Screen/height DEI2 #000a SUB2 .Screen/y DEO2
	;cat-icn [ LIT2 00 -nav/cat ] LDZ #30 SFT2 ADD2 .Screen/addr DEO2
	[ LIT2 01 -Screen/sprite ] DEO
	JMP2r

@<draw-filepath> ( color -- )
	[ LIT2 &x $2 ] .Screen/x DEO2
	#0004 .Screen/y DEO2
	[ LIT2 25 -Screen/auto ] DEO
	;<draw-glyph-plain>/color STA
	;Source/buf <draw-str>/
	POP2 .Screen/x DEI2 ,<draw-position>/x STR2
	( >> )

@<draw-position> ( -- )
	[ LIT2 &x $2 ] .Screen/x DEO2
	#0004 .Screen/y DEO2
	[ LIT2 25 -Screen/auto ] DEO
	#03 ;<draw-glyph-plain>/color STA
	[ LIT ": ] <draw-glyph-plain>
	.scroll/y LDZ2 INC2 #03 <draw-decimal>
	( pad ) [ LIT2 21 -Screen/auto ] DEO
	;fill-icn .Screen/addr DEO2
	[ LIT2 00 -Screen/sprite ] DEOk DEOk DEO
	JMP2r

@<clear-filepath> ( -- )
	;<draw-filepath>/x LDA2 .Screen/x DEO2
	#0018 .Screen/y DEO2
	[ LIT2 a0 -Screen/pixel ] DEO
	JMP2r

@<draw-atcursor> ( pos* -- )
	DUP2 get-scroll-addr LTH2 ?&hidden
	DUP2 addr-to-x .scroll/x LDZ2 ADD2 .Screen/x DEO2
	addr-to-line .scroll/y LDZ2 SUB2 #0018 MUL2 #0030 ADD2 #0028
	( min ) GTH2k [ JMP SWP2 ] POP2 .Screen/y DEO2
	JMP2r

	&hidden ( pos* -- )
	POP2 #8000 DUP2 .Screen/x DEO2
	.Screen/y DEO2
	JMP2r

@<draw-widget> ( -- )
	.Search/buf LDZ ?<draw-widget-search>
	get-to DUP2 get-from SUB2 DUP2 #001f GTH2 ?{ POP2 POP2 JMP2r }
	SWP2 <draw-atcursor>
	<draw-widget-parts>/left
	#04 <draw-decimal> !<draw-widget-parts>/right

@<draw-widget-search> ( -- )
	get-to <draw-atcursor>
	#04 ;<draw-glyph-plain>/color STA
	<draw-widget-parts>/left
	;Search/buf <draw-str>
	POP2 !<draw-widget-parts>/right

@<draw-widget-unicode> ( str* -- )
	get-to <draw-atcursor>
	#04 ;<draw-glyph-plain>/color STA
	<draw-widget-parts>/left
	<draw-str>
	POP2 !<draw-widget-parts>/right

@<draw-widget-parts>
	&left ( -- )
	( | clamp left )
	.Screen/x DEI2 #0107 GTH2k [ JMP SWP2 ] POP2 .Screen/x DEO2
	( | bubble )
	[ LIT2 02 -Screen/auto ] DEO
	.Screen/x DEI2k #0003 SUB2 ROT DEO2
	.Screen/y DEI2k #000c ADD2 ROT DEO2
	;bubble-icn .Screen/addr DEO2
	[ LIT2 05 -Screen/sprite ] DEO
	.Screen/x DEI2k #0008 SUB2 ROT DEO2
	[ LIT2 25 -Screen/auto ] DEO
	;marker-icns .Screen/addr DEO2
	[ LIT2 05 -Screen/sprite ] DEO
	JMP2r

	&right ( -- )
	.Screen/x DEI2k #0002 ADD2 ROT DEO2
	;marker-icns .Screen/addr DEO2
	[ LIT2 15 -Screen/sprite ] DEO
	JMP2r

@<draw-str-right> ( text* -- )
	DUP2 get-strw STH2
	.Screen/x DEI2k STH2r SUB2 ROT DEO2
	( >> )

@<draw-str> ( str* -- str* )
	[ LIT2 25 -Screen/auto ] DEO
	&>w ( -- )
		LDAk <draw-glyph-plain>
		INC2 & LDAk ?&>w
	INC2 JMP2r

@<draw-lb> ( -- )
	.Screen/y DEI2k #0018 ADD2 ROT DEO2
	JMP2r

@<draw-spacer> ( -- )
	#0000 .Screen/x DEO2
	#0018 .Screen/y DEO2
	[ LIT2 01 -Screen/width ] DEI2 #03 SFT2 SUB ;dotted-icn #01 !<draw-times>

@<draw-decimal> ( short* color -- )
	;<draw-glyph-plain>/color STA
	#000a SWP2 [ LITr ff ]
	&>get ( -- )
		SWP2k DIV2k MUL2 SUB2 STH
		POP OVR2 DIV2 ORAk ?&>get
	POP2 POP2
	&>put ( -- )
		STHr INCk ?{ POP JMP2r }
		[ LIT "0 ] ADD <draw-glyph-plain> !&>put

(
@|theme )

@load-theme ( -- )
	;&path .File/name DEO2
	#0002 .File/length DEO2
	;&r .File/read DEO2
	;&g .File/read DEO2
	;&b .File/read DEO2
	[ LIT2 00 -File/success-lb ] DEI EQU ?{
		[ LIT2 &r $2 ] .System/r DEO2
		[ LIT2 &g $2 ] .System/g DEO2
		[ LIT2 &b $2 ] .System/b DEO2 }
	JMP2r

	&path ".theme $1

(
@|stdlib )

@chex ( c -: <val> )
	[ LIT "0 ] SUB DUP #0a LTH ?&end
	#27 SUB DUP #10 LTH ?&end
	POP #ff &end JMP2r

@shex ( str* -: value* )
	[ LIT2r 0000 ]
	&>w ( `i* -- )
		( acc ) [ LITr 40 ] SFT2r
		( res ) LDAk chex [ LITr 00 ] STH
		ADD2r INC2 LDAk ?&>w
	POP2 STH2r JMP2r

@hexc ( hex -- char )
	#0f AND #0a LTHk ?{
		SUB [ LIT "a ] ADD JMP2r }
	POP [ LIT "0 ] ADD JMP2r

@flen ( path* -- size* )
	.File/name DEO2
	#0004 .File/length DEO2
	;&buf DUP2 .File/stat DEO2
	LDAk [ LIT "- ] EQU ?&fail
	LDAk [ LIT "? ] EQU ?&fail
	LDAk [ LIT "! ] EQU ?&fail
	!shex

	&fail ( buf* -- size* )
	POP2 #0000 JMP2r

@fbin? ( path* -- bool )
	.File/name DEO2
	#0001 .File/length DEO2
	&s ( -- )
	;&b feof? ?{
		[ LIT &b $1 ] ?&s
		#01 JMP2r
		!&s }
	#00 JMP2r

@feof? ( buf* -- eof )
	.File/read DEO2
	.File/success DEI2 #0000 EQU2 JMP2r

@clab? ( c -- bool )
	DUP LIT "0 SUB #0a LTH ?&ok
	DUP LIT "a SUB #1a LTH ?&ok
	DUP LIT "A SUB #1a LTH ?&ok
	DUP LIT "- EQU ?&ok
	DUP LIT "_ EQU ?&ok
	DUP LIT "< EQU ?&ok
	DUP LIT "> EQU ?&ok
	DUP LIT "? EQU ?&ok
	DUP #7f GTH ?&ok
	POP #00 &ok JMP2r

@scmp? ( a* b* -- bool )
	STH2
	&>l ( -- )
		LDAk ?{ &>d LDA LDAr STHr EQU JMP2r }
			LDAk LDAkr STHr NEQ ?&>d
		INC2 INC2r !&>l

@<msfl> ( a* distance* -- )
	OVR2 ,&dst STR2
	ADD2k ,&src STR2
	POP2 get-eof SWP2 SUB2 ,&length STR2
	;&mmu .System/expansion DEO2
	JMP2r
	&mmu 01 &length 0000 0000 &src 0000 0000 &dst 0000

@<msfr> ( a* distance* -- )
	ADD2k ,&dst STR2
	OVR2 ,&src STR2
	POP2 get-eof SWP2 SUB2 ,&length STR2
	;&mmu .System/expansion DEO2
	JMP2r
	&mmu 02 &length 0000 0000 &src 0000 0000 &dst 0000

@sseg? ( a* b* -- bool )
	STH2
	&>l ( -- )
		LDAk LDAkr STHr NEQ ?&end
		INC2k LDA #00 EQU ?&end
		INC2 INC2r !&>l
	&end LDA LDAr STHr EQU JMP2r

@wlen ( str* -- len* )
	DUP2
	&>w ( -- )
		INC2 LDAk #20 GTH ?&>w
	SWP2 SUB2 JMP2r

@<sclr> ( str* -- )
	#00 ROT ROT
	&>w ( -- )
		STAk INC2 LDAk ?&>w
	STA
	JMP2r

@skey ( key zbuf30 -- proc )
	OVR ?{ POP JMP2r }
	OVR #08 NEQ ?{
		NIP #00 SWP spop #00 JMP2r }
	#00 OVR slen NIP #2f LTH ?{ POP2 #00 JMP2r }
	OVR #7f NEQ ?{
		NIP #00 SWP <sclr>
		#00 JMP2r }
	OVR #20 LTH ?{
		#00 SWP sput #00 JMP2r }
	POP JMP2r

@snarf-txt ".snarf $1

@untitled-txt "untitled.txt $1



( manifest )

@trap-menu ( -> )
	;on-mouse-menu .Mouse/vector DEO2
	#0000 .Controller/vector DEO2
	#40 <draw-cursor>
	BRK

@on-mouse-menu ( -> )
	[ LIT2 00 -Mouse/state ] DEI NEQ #42 ADD <update-cursor>
	( | when touch cat )
	[ LIT2 00 -Mouse/state ] DEI EQU ?&no-touch-cat
	.Mouse/y DEI2 #001a GTH2 ?&no-touch-cat
	.Mouse/x DEI2 #0004 ADD2 get-x-cat menu-select-cat
	( release ) [ LIT2 00 -Mouse/state ] DEO
	BRK

	&no-touch-cat ( when sub active )
	;<draw-menu>/sel LDA #ff EQU ?&no-sub
	( | when sel changed )
	.Mouse/y DEI2 #0004 SUB2 #0018 DIV2 NIP #01 SUB
	( | changed )
	DUP ;<draw-sub>/sel LDA EQU ?&no-change
	DUP ;<draw-sub>/sel STA
	;<draw-menu>/sel LDA <draw-sub> &no-change POP
	( | when touch sub )
	[ LIT2 00 -Mouse/state ] DEI EQU ?&no-touch-sub
	;<draw-sub>/sel LDA menu-select-sub
	( release ) [ LIT2 00 -Mouse/state ] DEO &no-touch-sub BRK

	&no-sub ( don't leave if menu is active )
	;<draw-menu>/sel LDA INC ?&no-leave
	.Mouse/y DEI2 #0018 LTH2 ?&no-leave
	menu-close &no-leave BRK

(
@|actions )

@menu-deselect ( cat cat -- )
	POP2

@menu-close ( -- )
	untrap ;<draw-menu>/sel LDA DUP #ff EQU ?{
		DUP <clear-sub>
		#ff ;<draw-menu>/sel STA
		redraw-all <draw-menu> }
	POP JMP2r

@menu-select-cat ( cat -- )
	DUP get-cat ORA ?{ POP JMP2r }
	( clear ) ;<draw-menu>/sel LDA
	( unchanged ) EQUk ?menu-deselect
	( unselected ) DUP #ff EQU ?{ DUP <clear-sub> }
	POP
	( | draw )
	redraw-all #ff ;<draw-sub>/sel STA
	DUP ;<draw-menu>/sel STA
	<draw-sub> !<draw-menu>

@menu-select-sub ( sub -- )
	,&t STR
	;<draw-menu>/sel LDA get-cat get-cat-length #00
	&>l ( -- )
		DUP [ LIT &t $1 ] NEQ ?{
			menu-close POP2 INC2 INC2 LDA2 JMP2 }
		next-sub ?&>l
	POP2 POP2 !menu-close

@get-cat ( cat -- cat* )
	[ LIT2 00 _&t ] STR2
	;<draw-menu>/manifest LDA2
	&>w ( -- )
		[ LIT2 &t $1 &id $1 ] INCk ,&id STR
		EQU ?&end
		skip-cat LDAk ?&>w
	POP2 #0000 &end JMP2r

@get-cat-length ( cat* -- sub* length )
	LDAk STH
	INC2 scap/ INC2 STHr JMP2r

@get-cat-x ( cat -- x* )
	[ LIT2 00 _&t ] STR2
	[ LIT2r 0000 ] ;<draw-menu>/manifest LDA2
	&>w ( -- )
		[ LIT2 &t $1 &id 00 ] INCk ,&id STR
		EQU ?&end
		INC2k get-strw #0008 ADD2 STH2
		ADD2r skip-cat LDAk ?&>w &end POP2 STH2r
	( left padding + 4 ) #0010 ADD2 JMP2r

@get-x-cat ( x* -- <cat> )
	( left padding + 4 ) #0010 SUB2 ,&t STR2
	[ LITr 00 ] [ LIT2r 0000 ] ;<draw-menu>/manifest LDA2
	&>w ( -- )
		INC2k get-strw #0008 ADD2 STH2r ADD2 DUP2 [ LIT2 &t $2 ] LTH2 ?{ POP2 POP2 STHr JMP2r }
		INCr STH2
		skip-cat LDAk ?&>w
	POP2 POP2r POPr #ff JMP2r

@find-modkey ( mod key -- fn* )
	ORAk ?{ JMP2r }
	( not null ) ,&mk STR2
	;<draw-menu>/manifest LDA2
	&>cat ( -- )
		get-cat-length #00
		&>subcat ( -- )
			OVR2 LDA2 [ LIT2 &mk $2 ] NEQ2 ?{
				POP2 INC2 INC2 LDA2 JMP2r }
			next-sub ?&>subcat
		POP2 LDAk ?&>cat
	POP2 #0000 JMP2r

@skip-cat ( cat* -- next-cat* )
	get-cat-length #00
	&>subcat ( -- )
		next-sub ?&>subcat
	POP2 JMP2r

@next-sub ( sub* to from -- sub* to from continue )
	SWP2 #0004 ADD2 scap/ INC2 SWP2 INC GTHk JMP2r

(
@|drawing )

@<draw-menu> ( mask -- )
	#0004 .Screen/y DEO2
	#000c .Screen/x DEO2
	[ LITr 00 ] [ LIT2 &manifest =manifest ]
	&>w ( -- )
		INC2k [ LIT &sel ff ] STHkr EQU <draw-label-top>
		.Screen/x DEI2k #0008 ADD2 ROT DEO2
		INCr skip-cat LDAk ?&>w
	POP2 POPr JMP2r

@<draw-sub> ( cat -- )
	DUP get-cat-x ,&anchor STR2
	get-cat ORAk ?{ POP2 JMP2r }
	#001c .Screen/y DEO2
	LDAk #00 SWP2 INC2 scap/ INC2 STH2
	&>l ( -- )
		[ LIT2 &anchor $2 ] .Screen/x DEO2
		DUP [ LIT &sel ff ] EQU STH2r ROT <draw-label-sub>
		STH2
		<draw-lb>
		INC GTHk ?&>l
	POP2 POP2r JMP2r

@<clear-sub> ( cat -- )
	DUP get-cat-x .Screen/x DEO2
	#0014 .Screen/y DEO2
	get-cat LDA DUP ADD #00 SWP ;fill-icn #f2
	( >> )

@<draw-times> ( color times addr* auto -- )
	.Screen/auto DEO
	.Screen/addr DEO2
	SWP STH
	[ LITr -Screen/sprite ]
	&>l ( -- )
		DEOkr
		INC DUP ?&>l
	POP POP2r JMP2r

@<draw-label-top> ( str* sel -- )
	[ LIT2 25 -Screen/auto ] DEO
	;menu-icn .Screen/addr DEO2
	STHk .Screen/sprite DEO
	#0401 STHkr [ JMP SWP POP ] ;<draw-glyph-plain>/color STA
	<draw-str>
	POP2 ;menu-icn/right .Screen/addr DEO2
	[ LITr -Screen/sprite ] DEOr
	.Screen/x DEI2 #0010 SUB2 .Screen/x DEO2
	JMP2r

@<draw-label-sub> ( label* sel -- next-label* )
	( | bg )
	[ LITr -Screen/x ] DEI2r [ LITr -Screen/y ] DEI2r
	( fill ) #20 SFT #04 ADD #e0 ;blank-icn #21 <draw-times>
	[ LITr -Screen/y ] DEO2r
	[ LITr -Screen/x ] DEO2r
	( | fg )
	#00 ;<draw-glyph-plain>/color STA
	( | right )
	[ LITr -Screen/x ] DEI2r
	( ) DUP2r [ LIT2r 00f8 ] ADD2r [ LITr -Screen/x ] DEO2r
	LDA2k get-modkey-str <draw-str-right>
	POP2
	( | left )
	[ LIT2r 0004 ] ADD2r [ LITr -Screen/x ] DEO2r
	#0004 ADD2 !<draw-str>

@get-modkey-str ( mod key -- str* )
	;&buf #0008 mclr
	( ) ORAk ?{ POP2 ;&buf JMP2r }
	( | mod )
	SWP STH
	#0800
	&>l ( -- )
		STHkr OVR SFT #01 AND #00 EQU ?{
			#00 OVR ;&buttons ADD2 LDA ;&buf sput }
		INC GTHk ?&>l
	POP2
	( | mix )
	DUP #00 NEQ STHr #00 NEQ #0101 NEQ2 ?{ LIT "+ ;&buf sput }
	( | key )
	DUP #08 NEQ ?{ ;&bsp !&cat }
	DUP #09 NEQ ?{ ;&tab !&cat }
	DUP #0d NEQ ?{ ;&ent !&cat }
	DUP #20 NEQ ?{ ;&spc !&cat }
	DUP #1b NEQ ?{ ;&esc !&cat }
	DUP #7f NEQ ?{ ;&del !&cat }
	DUP ;&buf sput &end POP ;&buf JMP2r
	&buf $8
	&buttons "ABsSUDLR $1 &cat ;&buf scat !&end

	&bsp "bsp $1
	&tab "tab $1
	&ent "ent $1
	&spc "spc $1
	&esc "esc $1
	&del "del $1

@<update-cursor> ( color -- )
	[ LIT2 15 -Screen/auto ] DEO
	;fill-icn .Screen/addr DEO2
	#40 <draw-cursor>
	;cursor-icn .Screen/addr DEO2
	.Mouse/x DEI2 ,<draw-cursor>/x STR2
	.Mouse/y DEI2 ,<draw-cursor>/y STR2
	( >> )

@<draw-cursor> ( color -- )
	[ LIT2 &x $2 ] .Screen/x DEO2
	[ LIT2 &y $2 ] .Screen/y DEO2
	.Screen/sprite DEO
	JMP2r

(
@|stdlib )

@scap ( str* -- end* )
	INC2 & LDAk ?scap
	JMP2r

@sput ( chr str* -- )
	scap/ ROT #00 SWP2 STA2
	JMP2r

@slen ( str* -- len* )
	DUP2 scap/ SWP2 SUB2 JMP2r

@spop ( str* -- )
	LDAk ?&>w
	[ POP2 JMP2r ]
	&>w ( -- )
		scap/ #0001 SUB2 LITr 00 STH2
		STAr
		JMP2r

@scat ( src* dst* -- )
	scap/
	( >> )

@scpy ( src* dst* -- )
	STH2 !&

	&>w ( -- )
		LDAk #00 STH2kr STA2
		INC2r INC2 & LDAk ?&>w
	POP2 POP2r JMP2r

@mclr ( src* len* -- )
	OVR2 ADD2 SWP2
	&>l ( -- )
		[ LITr 00 ] STH2k STAr
		INC2 GTH2k ?&>l
	POP2 POP2 JMP2r

@<phex> ( short* -- )
	SWP <phex>/b
	&b ( -- )
	DUP #04 SFT <phex>/c
	&c ( -- )
	#0f AND DUP #09 GTH #27 MUL ADD #30 ADD #18 DEO
	JMP2r

@<pstr> ( str* -- )
	LDAk #18 DEO
	INC2 LDAk ?<pstr>
	POP2 JMP2r

@exit ( -- )
	#800f DEO
	JMP2r

(
@|assets )

@blank-icn [ 0000 0000 0000 0000 ]

@fill-icn [
	ffff ffff ffff ffff ffff ffff ffff ffff
	ffff ffff ffff ffff ]



@dict
	&bytes-free 20 "bytes 20 "free. $1
	&empty "Empty $1

@runes
	[ "@&,_.-;=!? ] $1
&lit
	[ ",_.-;=!? ] $1

@dotted-icn [
	0000 0000 0000 00aa ]
@cursor-icn [
	80c0 e0f0 f8fc feff f8d8 8c0c 0606 0000 ]
@menu-icn [
	070f 0f0f 0f0f 0f0f 0f0f 0f0f 0f0f 0f0f
	0f0f 0f0f 0f0f 0f0f ]
&right [
	e0f0 f0f0 f0f0 f0f0 f0f0 f0f0 f0f0 f0f0
	f0f0 f0f0 f0f0 f8fc ]
@cat-icn [
	0000 ff81 81ff 81ff 0000 ff81 81ff ffff ]
@bubble-icn
	[ 0000 0000 0008 1c3e ]
@dotdot-icn [
	0000 0000 0000 0000
	0000 0000 0000 0000
	0000 0048 0000 0000 ]
@checkered-icn [
	aa55 aa55 aa55 aa55 aa55 aa55 aa55 aa55 ]
@blinker-icn [
	c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0 c0c0
	c0c0 c0c0 c0c0 c0c0 ]
@marker-icns [
	0307 0707 0707 0707 0707 0707 0707 0707
	0707 0707 0707 0703 ]
&end [
	c0e0 e0f0 f0f8 f8fc fcfe feff fffe fefc
	fcf8 f8f0 f0e0 e0c0 ]

@font
( ?? )
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
&underline
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 00ff 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 00ff 0000
( ?? )
0000 0000 0f1f 3f3f 3333 3f3f 3f37 3038
3f1f 0f00 0000 0000 0000 0000 c0e0 f0f0
3030 f0f0 f0b0 3070 f0e0 c000 0000 0000
( ?? )
0000 0000 0038 7d7f 7f7f 3f3f 1f0f 0702
0200 0000 0000 0000 0000 0000 00e0 f0f0
f0f0 e0e0 c080 0000 0000 0000 0000 0000
&diamond
0000 0000 0202 0707 0f0f 1f1f 0f0f 0707
0202 0000 0000 0000 0000 0000 0000 0000
8080 c0c0 8080 0000 0000 0000 0000 0000
( ?? )
0000 0000 070f 0f0f 073a 7f7f 7f3a 0202
071f 0000 0000 0000 0000 0000 0080 8080
00e0 f0f0 f0e0 0000 00c0 0000 0000 0000
( ?? )
0000 0000 0207 0f1f 3f3f 7f7f 7f3a 0202
071f 0000 0000 0000 0000 0000 0000 80c0
e0e0 f0f0 f0e0 0000 00c0 0000 0000 0000
( ?? )
0000 0000 0000 0000 061f 1f3f 3f1f 1f06
0000 0000 0000 0000 0000 0000 0000 0000
0080 80c0 c080 8000 0000 0000 0000 0000
( ?? )
ffff ffff ffff ffff f9e0 e0c0 c0e0 e0f9
ffff ffff ffff ffff f0f0 f0f0 f0f0 f0f0
f070 7030 3070 70f0 f0f0 f0f0 f0f0 f0f0
( tab )
0000 0000 0000 0000 0000 2000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( linebreak )
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( ?? )
0003 0000 0001 010f 1930 3060 6060 6060
3030 190f 0000 0000 00f0 70f0 d090 9000
80c0 c060 6060 6060 c0c0 8000 0000 0000
( ?? )
0007 0c18 1830 3030 3030 1818 0c07 0303
3f03 0303 0000 0000 0080 c060 6030 3030
3030 6060 c080 0000 f000 0000 0000 0000
( ?? )
0004 0406 0607 0705 0404 0404 0404 0404
041c 3c7c 7830 0000 0000 0000 0000 80c0
c060 6020 2020 6040 8000 0000 0000 0000
( ?? )
000c 0f09 0c0f 0b08 0808 0808 0808 0838
78f8 f163 0301 0000 0000 80e0 6020 e0e0
2020 2020 2020 2020 20e0 e0e0 c080 0000
( x10 )
0000 0026 6636 361f 1f19 19f9 f919 1919
1f36 3666 2600 0000 0000 0040 60c0 c080
8080 80f0 f080 8080 80c0 c060 4000 0000
( ?? )
0000 0040 6070 787c 7e7f 7f7f 7f7f 7e7c
7870 6040 0000 0000 0000 0000 0000 0000
0000 c0f0 c000 0000 0000 0000 0000 0000
( ?? )
0000 0000 0000 0001 0307 1f7f 1f07 0301
0000 0000 0000 0000 0000 0010 3070 f0f0
f0f0 f0f0 f0f0 f0f0 f070 3010 0000 0000
( ?? )
0000 060f 1f36 2606 0606 0606 0606 0606
0626 361f 0f06 0000 0000 0000 80c0 4000
0000 0000 0000 0000 0040 c080 0000 0000
( ?? )
0010 3838 3838 3838 3810 1010 1010 1000
0000 183d 3d18 0000 0040 e0e0 e0e0 e0e0
e040 4040 4040 4000 0000 c0e0 e0c0 0000
( ?? )
000f 3e7e 7e7e 7e7e 3e1e 0202 0202 0202
0202 0202 0000 0000 00f0 4040 4040 4040
4040 4040 4040 4040 4040 4040 0000 0000
( ?? )
000f 1830 3030 180c 1f31 3030 180c 0701
1038 3830 180f 0000 0080 c060 e0e0 4000
0080 c060 6060 c080 c060 6060 c080 0000
( ?? )
0000 0000 0000 0000 0000 0000 003f 3f3f
3f3f 3f00 0000 0000 0000 0000 0000 0000
0000 0000 00f0 f0f0 f0f0 f000 0000 0000
( ?? )
0000 060f 1f36 2606 0606 0606 0606 0606
2636 1f0f 063f 0000 0000 0000 80c0 4000
0000 0000 0000 0000 40c0 8000 00c0 0000
&runes
0000 071f 1f3f 3f3f 3f3c 3838 3c3f 3f3f
3f1f 1f07 0000 0000 0000 80e0 e0f0 f0f0
f0f0 7070 f0f0 f0f0 f0e0 e080 0000 0000
0000 071f 1830 3030 3033 3737 3330 3030
3018 1f07 0000 0000 0000 80e0 6030 3030
3030 b0b0 3030 3030 3060 e080 0000 0000
0000 0303 0707 0f0f 1f1c 3838 1c1f 0f0f
0707 0303 0000 0000 0000 0000 8080 c0c0
e0e0 7070 e0e0 c0c0 8080 0000 0000 0000
0000 0303 0707 0c0c 181b 3737 1b18 0c0c
0707 0303 0000 0000 0000 0000 8080 c0c0
6060 b0b0 6060 c0c0 8080 0000 0000 0000
0000 0307 0f1f 3c38 383c 3f3f 3c38 383c
1f0f 0703 0000 0000 0000 0080 c0e0 f070
70f0 f0f0 f070 70f0 e0c0 8000 0000 0000
0000 0307 0c18 3337 3733 3030 3337 3733
180c 0703 0000 0000 0000 0080 c060 30b0
b030 3030 30b0 b030 60c0 8000 0000 0000
0000 0000 0101 0101 3f3f 1f1f 3f3f 0101
0101 0000 0000 0000 0000 0000 8080 c0c0
e0e0 f0f0 e0e0 c0c0 8080 0000 0000 0000
0000 0000 0000 303c 3f3f 1f1f 3f3f 3c30
0000 0000 0000 0000 0000 0000 0000 0000
00c0 f0f0 c000 0000 0000 0000 0000 0000
( space )
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000

0002 0707 0707 0707 0702 0202 0202 0200
0000 0307 0703 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0080 8000 0000
( " )
0019 1919 1919 0000 0000 0000 0000 0000
0000 0000 0000 0000 0080 8080 8080 0000
0000 0000 0000 0000 0000 0000 0000 0000
( # )
0004 0404 043f 3f08 0808 0808 0808 7f7f
1111 1111 1100 0000 0040 4040 40f0 f080
8080 8080 8080 e0e0 0000 0000 0000 0000
( $ )
0202 0f1a 3232 3232 1a1e 0f03 0202 3232
3232 1a0f 0202 0000 0000 80c0 6060 6000
0000 80e0 6030 3030 3030 60c0 0000 0000
( % )
003c 6666 6666 6665 3903 0206 0405 0f0b
1b13 3321 2000 0000 2020 6040 c080 8080
0000 0000 e030 3030 3030 30e0 0000 0000
( & )
000f 1919 1919 1919 0b0e 1c34 3466 6263
6361 331e 0000 0000 0000 8080 8080 8000
0000 e040 4040 c080 8090 f060 0000 0000
( ' )
0006 0606 0606 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( paren left )
0000 0001 0103 0303 0606 0606 0606 0303
0301 0100 0000 0000 0060 c080 8000 0000
0000 0000 0000 0000 0080 80c0 6000 0000
( paren right )
0030 180c 0c06 0606 0303 0303 0303 0606
0e0c 0c18 3000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( star )
0000 0000 0207 2772 3a0f 020f 3a72 2707
0200 0000 0000 0000 0000 0000 0000 2070
e080 0080 e070 2000 0000 0000 0000 0000
( add )
0000 0000 0000 0202 0202 3f02 0202 0200
0000 0000 0000 0000 0000 0000 0000 0000
0000 e000 0000 0000 0000 0000 0000 0000

0000 0000 0000 0000 0000 0000 0000 0000
0307 0703 0103 0600 0000 0000 0000 0000
0000 0000 0000 0000 0080 8080 8000 0000

0000 0000 0000 0000 0000 3f00 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 e000 0000 0000 0000 0000 0000 0000

0000 0000 0000 0000 0000 0000 0000 0000
0307 0703 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0080 8000 0000 0000
( slash foward )
0000 0000 0000 0101 0303 0606 0c0c 1818
3030 6060 c000 0000 0030 6060 c0c0 8080
0000 0000 0000 0000 0000 0000 0000 0000

0007 0c18 1830 3030 3030 3030 3030 3030
1818 0c07 0000 0000 0080 c060 6030 3030
3030 3030 3030 3030 6060 c080 0000 0000

0001 071f 0303 0303 0303 0303 0303 0303
0303 031f 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 00e0 0000 0000

000f 1830 3838 1000 0001 0103 0604 0c08
1810 3f3f 0000 0000 0080 c060 6060 60c0
c080 0000 0000 0000 2060 c0c0 0000 0000

000f 1830 3838 1000 0001 0700 0000 1038
3830 180f 0000 0000 0080 c060 6060 6060
c080 80c0 6060 6060 6060 c080 0000 0000

0000 0101 0302 0604 0c08 1810 3020 7f00
0000 0007 0000 0000 00c0 c0c0 c0c0 c0c0
c0c0 c0c0 c0c0 f0c0 c0c0 c0f0 0000 0000

001f 1f10 1010 1010 171c 1000 0000 1038
3830 180f 0000 0000 00f0 e000 0000 0000
80e0 6030 3030 3030 3060 e080 0000 0000

0007 0c18 1830 3030 373c 3830 3030 3030
3018 1c07 0000 0000 00c0 6070 3000 0000
c060 6030 3030 3030 3060 e080 0000 0000

001f 1f30 2020 0000 0001 0101 0303 0303
0707 0702 0000 0000 00f0 f020 6040 c080
8080 8080 0000 0000 0000 0000 0000 0000

0007 0c18 1818 180c 0e07 0d18 1830 3030
3018 1c07 0000 0000 0080 c060 6060 6040
c080 c0e0 6030 3030 3060 e080 0000 0000

0007 1c18 3030 3030 3030 180f 0000 1038
3830 180f 0000 0000 0080 e060 3030 3030
3070 f0b0 3030 3030 6060 c080 0000 0000

0000 0000 0307 0703 0000 0000 0003 0707
0300 0000 0000 0000 0000 0000 0080 8000
0000 0000 0000 8080 0000 0000 0000 0000

0000 0000 0307 0703 0000 0000 0003 0707
0301 0306 0000 0000 0000 0000 0080 8000
0000 0000 0000 8080 8080 0000 0000 0000
( angular left )
0000 0000 0000 0101 0303 0606 0303 0101
0000 0000 0000 0000
0030 6060 c0c0 8080 0000 0000 0000 8080
c0c0 6060 3000 0000
( equal )
0000 0000 0000 0000 3f00 0000 003f 0000
0000 0000 0000 0000 0000 0000 0000 0000
f000 0000 00f0 0000 0000 0000 0000 0000
( angular right )
0060 3030 1818 0c0c 0606 0303 0606 0c0c
1818 3030 6000 0000
0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( ? )
000f 1830 3038 3810 0001 0103 0202 0200
0000 0307 0703 0000 00c0 6030 3030 7060
c080 0000 0000 0000 0000 0080 8000 0000
( @ )
0000 071c 3030 6067 6c6c 6c6c 6c6c 6d67
6060 3038 0f00 0000 0000 80e0 2030 1090
d0d0 d0d0 d0d0 f060 0010 3060 c000 0000
( A )
0003 0307 0505 050d 0908 0818 1f10 1030
2020 2078 0000 0000 0000 0000 8080 8080
80c0 c0c0 c0c0 c060 6060 60f0 0000 0000
( B )
007f 3030 3030 3030 3030 3f30 3030 3030
3030 307f 0000 0000 0080 c060 6060 6060
60c0 80e0 7030 3030 3030 60c0 0000 0000
( C )
0007 1c30 3060 6060 6060 6060 6060 6060
3030 1c07 0000 0000 00a0 e060 2020 0000
0000 0000 0000 0010 3020 e080 0000 0000
( D )
007f 3130 3030 3030 3030 3030 3030 3030
3030 317f 0000 0000 0000 c060 6030 3030
3030 3030 3030 3030 6060 c000 0000 0000
( E )
007f 1818 1818 1818 1818 1f18 1818 1818
1818 187f 0000 0000 00f0 3010 1000 0040
40c0 c0c0 4040 0000 1010 30f0 0000 0000
( F )
007f 1818 1818 1818 1818 1f18 1818 1818
1818 187e 0000 0000 00f0 3010 1000 0040
40c0 c0c0 4040 0000 0000 0000 0000 0000
( G )
0007 1c30 3060 6060 6060 6060 6160 6060
3030 1c07 0000 0000 00a0 e060 2020 0000
0000 0000 f060 6060 6060 e080 0000 0000
( H )
0078 3030 3030 3030 3030 3f30 3030 3030
3030 3078 0000 0000 00f0 6060 6060 6060
6060 e060 6060 6060 6060 60f0 0000 0000
( I )
001f 0303 0303 0303 0303 0303 0303 0303
0303 031f 0000 0000 00e0 0000 0000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( J )
001f 0303 0303 0303 0303 0303 0303 0303
0303 43e3 e366 3c00 00e0 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( K )
0079 3030 3031 3133 3636 3e3b 3331 3130
3030 3078 0000 0000 00f0 6040 c080 0000
0000 0000 0080 80c0 c060 60f0 0000 0000
( L )
007e 1818 1818 1818 1818 1818 1818 1818
1818 187f 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 1010 30f0 0000 0000
( M )
0070 3030 3838 3838 2d2d 2d2d 2727 2626
2222 2272 0000 0000 0070 6060 e0e0 e0e0
6060 6060 6060 6060 6060 60f0 0000 0000
( N )
0070 3038 382c 2c26 2626 2323 2121 2020
2020 2070 0000 0000 0070 2020 2020 2020
2020 2020 a0a0 e0e0 6060 6020 0000 0000
( O )
000f 1830 3060 6060 6060 6060 6060 6060
3030 180f 0000 0000 0080 c060 6030 3030
3030 3030 3030 3030 6060 c080 0000 0000
( P )
007f 3030 3030 3030 3030 3f30 3030 3030
3030 3078 0000 0000 0080 e060 3030 3030
60e0 8000 0000 0000 0000 0000 0000 0000
( Q )
000f 1830 3060 6060 6060 6060 6060 6f79
3030 180f 0000 0000 0080 c060 6030 3030
3030 3030 3030 30b0 e0e0 40d0 f060 0000
( R )
007f 3030 3030 3030 3030 3f33 3131 3030
3030 3078 0000 0000 0080 e060 3030 3030
60e0 8000 8080 c0c0 c060 6070 0000 0000
( S )
000f 1830 3030 3018 1e0f 0300 0000 2020
3038 2c27 0000 0000 00a0 e060 2020 0000
0080 c0e0 6030 3030 3030 60c0 0000 0000
( T )
003f 3323 2303 0303 0303 0303 0303 0303
0303 030f 0000 0000 00f0 3010 1000 0000
0000 0000 0000 0000 0000 00c0 0000 0000
( U )
0078 3030 3030 3030 3030 3030 3030 3030
3018 1c07 0000 0000 0070 2020 2020 2020
2020 2020 2020 2020 6040 c080 0000 0000
( V )
0078 3030 3018 1818 1818 0c0c 0c0d 0507
0707 0202 0000 0000 0070 2020 6040 4040
40c0 8080 8080 0000 0000 0000 0000 0000
( W )
0077 3333 3333 3333 3333 3715 1d1d 1d1d
0808 0808 0000 0000 0070 2020 2020 2020
2020 6040 c0c0 c0c0 8080 8080 0000 0000
( X )
0078 3030 1818 0c0d 0707 0207 050d 0908
1810 3078 0000 0000 00f0 6040 c080 8080
0000 0000 0080 80c0 c060 60f0 0000 0000
( Y )
0078 3030 1818 0c0c 0c06 0703 0303 0303
0303 030f 0000 0000 0070 2020 6040 40c0
8080 8000 0000 0000 0000 00c0 0000 0000
( Z )
003f 3020 2000 0001 0103 0306 060c 0c18
1830 307f 0000 0000 00f0 3060 60c0 c080
8000 0000 0000 0000 1010 10f0 0000 0000
( square bracket left )
0303 0303 0303 0303 0303 0303 0303 0303
0303 0303 0303 0000 e000 0000 0000 0000
0000 0000 0000 0000 0000 0000 00e0 0000
( slash backward )
00c0 6060 3030 1818 0c0c 0606 0303 0101
0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 8080
c0c0 6060 3000 0000
( square bracket right )
3e06 0606 0606 0606 0606 0606 0606 0606
0606 0606 061e 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( ^ )
070f 1800 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0080 c000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( _ )
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 00ff 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 00f0
( ` )
1c0e 0300 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0080 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( a )
0000 0000 0000 0000 1f31 3000 001f 3060
6060 311f 0000 0000 0000 0000 0000 0000
0080 c0c0 c0c0 c0c0 c0d0 f060 0000 0000
( b )
0070 3030 3030 3030 373c 3030 3030 3030
3030 3c27 0000 0000 0000 0000 0000 0000
80c0 6060 3030 3030 3060 e080 0000 0000
( c )
0000 0000 0000 0000 071c 1830 3030 3030
3018 1c07 0000 0000 0000 0000 0000 0000
c060 3030 0000 0000 1030 60c0 0000 0000
( d )
0001 0000 0000 0000 0f19 3030 6060 6060
6030 390f 0000 0000 00e0 6060 6060 6060
60e0 6060 6060 6060 6060 e070 0000 0000
( e )
0000 0000 0000 0000 071c 1030 303f 3030
3018 1c07 0000 0000 0000 0000 0000 0000
80e0 2030 30f0 0000 1030 60c0 0000 0000
( f )
0001 0302 0606 0606 7f06 0606 0606 0606
0606 063f 0000 0000 00e0 3030 0000 0000
e000 0000 0000 0000 0000 00c0 0000 0000
( g )
0000 0000 0000 000f 1930 3030 3019 3f30
1f3f 7060 6030 1f00 0000 0000 0000 0030
f0c0 c0c0 c080 0000 00e0 f030 3060 c000
( h )
0070 3030 3030 3030 373c 3830 3030 3030
3030 3078 0000 0000 0000 0000 0000 0000
80c0 6060 6060 6060 6060 60f0 0000 0000
( i )
0003 0707 0300 0000 0f03 0303 0303 0303
0303 031f 0000 0000 0000 8080 0000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( j )
0003 0707 0300 0000 0f03 0303 0303 0303
0303 43e3 e366 3c00 0000 8080 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
( k )
0070 3030 3030 3030 3130 3133 373f 3931
3030 3078 0000 0000 0000 0000 0000 0000
e0c0 8000 0000 8080 c0c0 60f0 0000 0000
( l )
001f 0303 0303 0303 0303 0303 0303 0303
0303 031f 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( m )
0000 0000 0000 0000 773b 3333 3333 3333
3333 3377 0000 0000 0000 0000 0000 0000
60b0 3030 3030 3030 3030 3070 0000 0000
( n )
0000 0000 0000 0000 773c 3030 3030 3030
3030 3078 0000 0000 0000 0000 0000 0000
80c0 6060 6060 6060 6060 60f0 0000 0000
( o )
0000 0000 0000 0000 071d 3030 6060 6060
3030 1d07 0000 0000 0000 0000 0000 0000
00c0 6060 3030 3030 6060 c000 0000 0000
( p )
0000 0000 0000 0000 773c 3030 3030 3030
3030 3c37 3030 7800 0000 0000 0000 0000
80e0 6030 3030 3030 3060 e080 0000 0000
( q )
0000 0000 0000 0000 0f39 3060 6060 6060
6030 390f 0000 0000 0000 0000 0000 0000
20e0 6060 6060 6060 6060 e060 6060 f000
( r )
0000 0000 0000 0000 3c0d 0e0c 0c0c 0c0c
0c0c 0c3f 0000 0000 0000 0000 0000 0000
e0b0 3000 0000 0000 0000 0000 0000 0000
( s )
0000 0000 0000 0000 0f18 3030 381f 0700
2030 382f 0000 0000 0000 0000 0000 0000
a0e0 6020 0000 e0f0 3030 60c0 0000 0000
( t )
0000 0000 0202 060e 3f06 0606 0606 0606
0606 0301 0000 0000 0000 0000 0000 0000
e000 0000 0000 0000 0010 30e0 0000 0000
( u )
0000 0000 0000 0000 7030 3030 3030 3030
3030 190f 0000 0000 0000 0000 0000 0000
e060 6060 6060 6060 6060 e070 0000 0000
( v )
0000 0000 0000 0000 7c30 3018 180c 0c0c
0607 0303 0000 0000 0000 0000 0000 0000
7020 2060 4040 c080 8080 0000 0000 0000
( w )
0000 0000 0000 0000 7733 3333 3333 3715
1d1d 0808 0000 0000 0000 0000 0000 0000
7020 2020 2020 6040 c0c0 8080 0000 0000
( x )
0000 0000 0000 0000 7c30 181c 0d07 070d
0918 3078 0000 0000 0000 0000 0000 0000
f060 c080 8000 0080 c0c0 60f0 0000 0000
( y )
0000 0000 0000 0000 7830 3018 1818 0c0c
0607 0703 6266 3c00 0000 0000 0000 0000
7020 2060 4040 c080 8080 0000 0000 0000
( z )
0000 0000 0000 0000 3f30 2021 0303 060e
1c18 303f 0000 0000 0000 0000 0000 0000
e060 c0c0 8000 0000 2020 60e0 0000 0000
( curlies left )
0000 0000 0000 0000 0101 0303 0101 0000
0000 0000 0000 0000
70c0 c0c0 c0c0 c0c0 8080 0000 8080 c0c0
c0c0 c0c0 c070 0000
( pipe )
0606 0606 0606 0606 0606 0606 0606 0606
0606 0606 0606 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000
( curlies right )
e030 3030 3030 3030 1818 0c0c 1818 3030
3030 3030 30e0 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000
( tilde )
0000 0000 0000 0000 384c 8603 0100 0000
0000 0000 0000 0000
0000 0000 0000 0000 0000 1020 c000 0000
0000 0000 0000 0000
&blank
aa55 aa55 aa55 aa55 aa55 aa55 aa55 aa55
aa55 aa55 aa55 aa55 aa55 aa55 aa55 aa55
aa55 aa55 aa55 aa55 aa55 aa55 aa55 aa55 ]

@latin-high
( A grave )
1c0e 0300 0303 0705 050d 0908 181f 1010
3020 2078 0000 0000 0000 0000 0000 0080
8080 80c0 c0c0 c0c0 6060 60f0 0000 0000
( A acute )
0001 0300 0303 0705 050d 0908 181f 1010
3020 2078 0000 0000 e0c0 0000 0000 0080
8080 80c0 c0c0 c0c0 6060 60f0 0000 0000
( A circ )
0103 0600 0303 0705 050d 0908 181f 1010
3020 2078 0000 0000 0080 c000 0000 0080
8080 80c0 c0c0 c0c0 6060 60f0 0000 0000
( A tilde )
0306 0000 0303 0705 050d 0908 181f 1010
3020 2078 0000 0000 60c0 0000 0000 0080
8080 80c0 c0c0 c0c0 6060 60f0 0000 0000
( A trema )
183c 1800 0303 0705 050d 0908 181f 1010
3020 2078 0000 0000 60f0 6000 0000 0080
8080 80c0 c0c0 c0c0 6060 60f0 0000 0000
( A circle )
070d 080d 0703 0705 050d 0908 181f 1010
3020 2078 0000 0000 0080 8080 0000 0080
8080 80c0 c0c0 c0c0 6060 60f0 0000 0000
( AE )
0003 0307 0707 070f 0b0b 0b1b 1f13 1333
2323 2373 0000 0000 00f0 3010 1000 0020
2060 e060 2020 0000 1010 30f0 0000 0000
( C cedil )
0007 1c30 3060 6060 6060 6060 6060 6060
3030 1c07 0110 0f00 00a0 e060 2020 0000
0000 0000 0000 0010 3020 e080 c0c0 8000
( E grave )
1c0e 0300 7f18 1818 1818 181f 1818 1818
1818 187f 0000 0000 0000 0000 f010 1000
4040 c0c0 c040 4000 1010 30f0 0000 0000
( E aigue )
0001 0300 7f18 1818 1818 181f 1818 1818
1818 187f 0000 0000 e0c0 0000 f010 1000
4040 c0c0 c040 4000 1010 30f0 0000 0000
( E circ )
0103 0600 7f18 1818 1818 181f 1818 1818
1818 187f 0000 0000 0080 c000 f010 1000
4040 c0c0 c040 4000 1010 30f0 0000 0000
( E trema )
183c 1800 7f18 1818 1818 181f 1818 1818
1818 187f 0000 0000 60f0 6000 f010 1000
4040 c0c0 c040 4000 1010 30f0 0000 0000
( I grave )
1c0e 0300 1f03 0303 0303 0303 0303 0303
0303 031f 0000 0000 0000 0000 e000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( I aigue )
0001 0300 1f03 0303 0303 0303 0303 0303
0303 031f 0000 0000 e0c0 0000 e000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( I circ )
0103 0600 1f03 0303 0303 0303 0303 0303
0303 031f 0000 0000 0080 c000 e000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( I trema )
183c 1800 1f03 0303 0303 0303 0303 0303
0303 031f 0000 0000 60f0 6000 e000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( D stroke )
007f 3130 3030 3030 3030 fc30 3030 3030
3030 317f 0000 0000 0000 c060 6030 3030
3030 3030 3030 3030 6060 c000 0000 0000
( N tilde )
0006 0d00 0070 3838 2c2c 2626 2323 2121
2020 2070 0000 0000 00c0 8000 0070 2020
2020 2020 2020 a0a0 e0e0 6020 0000 0000
( O grave )
1c0e 0300 0f18 3030 6060 6060 6060 6060
3030 180f 0000 0000 0000 0000 80c0 6060
3030 3030 3030 3030 6060 c080 0000 0000
( O aigue )
0001 0300 0f18 3030 6060 6060 6060 6060
3030 180f 0000 0000 e0c0 0000 80c0 6060
3030 3030 3030 3030 6060 c080 0000 0000
( O circ )
0103 0600 0f18 3030 6060 6060 6060 6060
3030 180f 0000 0000 0080 c000 80c0 6060
3030 3030 3030 3030 6060 c080 0000 0000
( O tilde )
0306 0000 0f18 3030 6060 6060 6060 6060
3030 180f 0000 0000 60c0 0000 80c0 6060
3030 3030 3030 3030 6060 c080 0000 0000
( O trema )
3078 3000 0f18 3030 6060 6060 6060 6060
3030 180f 0000 0000 60f0 6000 80c0 6060
3030 3030 3030 3030 6060 c080 0000 0000
( mul )
0000 0000 0000 2010 0805 0205 0810 2000
0000 0000 0000 0000 0000 0000 0000 2040
8000 0000 8040 2000 0000 0000 0000 0000
( O dash )
000f 1830 3060 6061 6162 6262 6464 6868
3030 384f 0000 0000 0090 e060 60b0 b030
3030 3030 3030 3030 6060 c080 0000 0000
( U grave )
1c0e 0300 7830 3030 3030 3030 3030 3030
3018 1c07 0000 0000 0000 0000 7020 2020
2020 2020 2020 2020 6040 c080 0000 0000
( U aigue )
0001 0300 7830 3030 3030 3030 3030 3030
3018 1c07 0000 0000 e0c0 0000 7020 2020
2020 2020 2020 2020 6040 c080 0000 0000
( U circ )
0103 0600 7830 3030 3030 3030 3030 3030
3018 1c07 0000 0000 0080 c000 7020 2020
2020 2020 2020 2020 6040 c080 0000 0000
( U trema )
183c 1800 7830 3030 3030 3030 3030 3030
3018 1c07 0000 0000 60f0 6000 7020 2020
2020 2020 2020 2020 6040 c080 0000 0000
( Y aigue )
0001 0300 7830 3018 180c 0c0c 0607 0303
0303 030f 0000 0000 e0c0 0000 7020 2060
4040 c080 8080 0000 0000 00c0 0000 0000
( thorn uc )
0078 3030 303f 3030 3030 3030 3030 3030
3f30 3078 0000 0000 0000 0000 0080 e060
3030 3030 3030 60e0 8000 0000 0000 0000
( S ger )
001f 3030 3030 3030 3031 3130 3030 3030
3030 3271 0000 0000 0080 e060 3030 3070
e000 00e0 7030 3030 3030 6080 0000 0000
( a grave )
001c 0e03 0000 0000 1f31 3000 001f 3060
6060 311f 0000 0000 0000 0000 0000 0000
0080 c0c0 c0c0 c0c0 c0d0 f060 0000 0000
( a aigue )
0001 0306 0000 0000 1f31 3000 001f 3060
6060 311f 0000 0000 00c0 8000 0000 0000
0080 c0c0 c0c0 c0c0 c0d0 f060 0000 0000
( a circ )
0003 070c 0000 0000 1f31 3000 001f 3060
6060 311f 0000 0000 0000 80c0 0000 0000
0080 c0c0 c0c0 c0c0 c0d0 f060 0000 0000
( a tilde )
0006 0d00 0000 0000 1f31 3000 001f 3060
6060 311f 0000 0000 00c0 8000 0000 0000
0080 c0c0 c0c0 c0c0 c0d0 f060 0000 0000
( a trema )
0018 3c18 0000 0000 1f31 3000 001f 3060
6060 311f 0000 0000 0060 f060 0000 0000
0080 c0c0 c0c0 c0c0 c0d0 f060 0000 0000
( a circle )
0007 0d08 0d07 0000 1f31 3000 001f 3060
6060 311f 0000 0000 0000 8080 8000 0000
0080 c0c0 c0c0 c0c0 c0d0 f060 0000 0000
( ae )
0000 0000 0000 0000 1d37 3303 031f 3363
6363 371c 0000 0000 0000 0000 0000 0000
c060 3030 30f0 0000 0010 b0e0 0000 0000
( c cedil )
0000 0000 0000 0000 071c 1830 3030 3030
3018 1c07 0108 0700 0000 0000 0000 0000
c060 3030 0000 0000 1030 60c0 80c0 8000
( e grave )
001c 0e03 0000 0000 071c 1030 303f 3030
3018 1c07 0000 0000 0000 0000 0000 0000
80e0 2030 30f0 0000 1030 60c0 0000 0000
( e aigu )
0001 0306 0000 0000 071c 1030 303f 3030
3018 1c07 0000 0000 00c0 8000 0000 0000
80e0 2030 30f0 0000 1030 60c0 0000 0000
( e circ )
0003 070c 0000 0000 071c 1030 303f 3030
3018 1c07 0000 0000 0000 80c0 0000 0000
80e0 2030 30f0 0000 1030 60c0 0000 0000
( e trema )
0018 3c18 0000 0000 071c 1030 303f 3030
3018 1c07 0000 0000 0060 f060 0000 0000
80e0 2030 30f0 0000 1030 60c0 0000 0000
( i grave )
001c 0e03 0000 0000 0f03 0303 0303 0303
0303 031f 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( i aigue )
0001 0306 0000 0000 0f03 0303 0303 0303
0303 031f 0000 0000 00c0 8000 0000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( i circ )
0003 070c 0000 0000 0f03 0303 0303 0303
0303 031f 0000 0000 0000 80c0 0000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( i trema )
0018 3c18 0000 0000 0f03 0303 0303 0303
0303 031f 0000 0000 0060 f060 0000 0000
0000 0000 0000 0000 0000 00e0 0000 0000
( d )
000c 0301 0001 0200 0f19 3030 6060 6060
6030 390f 0000 0000 0000 00a0 c0c0 6060
60e0 6060 6060 6060 6060 c000 0000 0000
( n tilde )
0006 0d00 0000 0000 773c 3030 3030 3030
3030 3078 0000 0000 00c0 8000 0000 0000
80c0 6060 6060 6060 6060 60f0 0000 0000
( o grave )
001c 0e03 0000 0000 071d 3030 6060 6060
3030 1d07 0000 0000 0000 0000 0000 0000
00c0 6060 3030 3030 6060 c000 0000 0000
( o aigue )
0001 0306 0000 0000 071d 3030 6060 6060
3030 1d07 0000 0000 00c0 8000 0000 0000
00c0 6060 3030 3030 6060 c000 0000 0000
( o circ )
0003 070c 0000 0000 071d 3030 6060 6060
3030 1d07 0000 0000 0000 80c0 0000 0000
00c0 6060 3030 3030 6060 c000 0000 0000
( o tilde )
0006 0d00 0000 0000 071d 3030 6060 6060
3030 1d07 0000 0000 00c0 8000 0000 0000
00c0 6060 3030 3030 6060 c000 0000 0000
( o trema )
0018 3c18 0000 0000 071d 3030 6060 6060
3030 1d07 0000 0000 0060 f060 0000 0000
00c0 6060 3030 3030 6060 c000 0000 0000
( div )
0000 0000 0207 0702 0000 7f00 0002 0707
0200 0000 0000 0000 0000 0000 0000 0000
0000 f000 0000 0000 0000 0000 0000 0000
( o dash )
0000 0000 0000 0000 071d 3030 6162 626c
3030 5d07 0000 0000 0000 0000 0000 0000
00d0 6060 b030 3030 6060 c000 0000 0000
( u grave )
001c 0e03 0000 0000 7030 3030 3030 3030
3030 190f 0000 0000 0000 0000 0000 0000
e060 6060 6060 6060 6060 e070 0000 0000
( u aigue )
0001 0306 0000 0000 7030 3030 3030 3030
3030 190f 0000 0000 00c0 8000 0000 0000
e060 6060 6060 6060 6060 e070 0000 0000
( u circ )
0003 070c 0000 0000 7030 3030 3030 3030
3030 190f 0000 0000 0000 80c0 0000 0000
e060 6060 6060 6060 6060 e070 0000 0000
( u trema )
0018 3c18 0000 0000 7030 3030 3030 3030
3030 190f 0000 0000 0060 f060 0000 0000
e060 6060 6060 6060 6060 e070 0000 0000
( y aigue )
0000 0103 0000 0000 7830 3018 1818 0c0c
0607 0703 6266 3c00 00e0 c000 0000 0000
7020 2060 4040 c080 8080 0000 0000 0000
( thorn lc )
0000 0000 0078 3030 373c 3030 3030 3030
3030 3c37 3030 7800 0000 0000 0000 0000
80e0 6030 3030 3030 3060 e080 0000 0000
( y trema )
0018 3c18 0000 0000 7830 3018 1818 0c0c
0607 0703 6266 3c00 0060 f060 0000 0000
7020 2060 4040 c080 8080 0000 0000 0000

@appicon ( 3x3 ) [
0000 0000 0000 0000 0000 0000 0000 0000 0008 0808 4838 1808 0814 14d4 b444 2414
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0307 070f 0000 0003 0408 0810
0808 08ff ffff ffff 1414 f700 0000 0000 0000 0080 e0f0 f0f8 0000 8060 1008 0804
0f0f 0f07 0703 0000 1010 1008 0c07 0300 ffff ffff ffff ff00 0080 c17f 0000 ffff
f8f8 f8f0 f0e0 8000 0484 8408 1870 e080 ]

@unicode/buf $3

( memory ) $1 @text

